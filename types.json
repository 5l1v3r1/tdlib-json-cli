{
  "acceptCall": {
    "fields": [
      {
        "type": "number",
        "name": "call_id",
        "desc": "Description of the call protocols supported by the client."
      },
      {
        "type": "callProtocol",
        "name": "protocol"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addChatMember": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The number of earlier messages from the chat to be forwarded to the new member; up to 300. Ignored for supergroups and channels."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "number",
        "name": "forward_limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addChatMembers": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifiers of the users to be added to the chat."
      },
      {
        "type": "number[]",
        "name": "user_ids"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addFavoriteSticker": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "Sticker file to add."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addNetworkStatistics": {
    "fields": [
      {
        "type": "NetworkStatisticsEntry",
        "name": "entry",
        "desc": "The network statistics entry with the data to be added to statistics."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addRecentlyFoundChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the chat to add."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addRecentSticker": {
    "fields": [
      {
        "type": "bool",
        "name": "is_attached",
        "desc": "Sticker file to add."
      },
      {
        "type": "InputFile",
        "name": "sticker"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addSavedAnimation": {
    "fields": [
      {
        "type": "InputFile",
        "name": "animation",
        "desc": "The animation file to be added. Only animations known to the server (i.e. successfully sent via a message) can be added to the list."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "addStickerToSet": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Sticker to add to the set."
      },
      {
        "type": "string",
        "name": "name"
      },
      {
        "type": "inputSticker",
        "name": "sticker"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "answerCallbackQuery": {
    "fields": [
      {
        "type": "string",
        "name": "callback_query_id",
        "desc": "Time during which the result of the query can be cached, in seconds."
      },
      {
        "type": "string",
        "name": "text"
      },
      {
        "type": "bool",
        "name": "show_alert"
      },
      {
        "type": "string",
        "name": "url"
      },
      {
        "type": "number",
        "name": "cache_time"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "answerCustomQuery": {
    "fields": [
      {
        "type": "string",
        "name": "custom_query_id",
        "desc": "JSON-serialized answer to the query."
      },
      {
        "type": "string",
        "name": "data"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "answerInlineQuery": {
    "fields": [
      {
        "type": "string",
        "name": "inline_query_id",
        "desc": "The parameter for the bot start message."
      },
      {
        "type": "bool",
        "name": "is_personal"
      },
      {
        "type": "InputInlineQueryResult[]",
        "name": "results"
      },
      {
        "type": "number",
        "name": "cache_time"
      },
      {
        "type": "string",
        "name": "next_offset"
      },
      {
        "type": "string",
        "name": "switch_pm_text"
      },
      {
        "type": "string",
        "name": "switch_pm_parameter"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "answerPreCheckoutQuery": {
    "fields": [
      {
        "type": "string",
        "name": "pre_checkout_query_id",
        "desc": "An error message, empty on success."
      },
      {
        "type": "string",
        "name": "error_message"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "answerShippingQuery": {
    "fields": [
      {
        "type": "string",
        "name": "shipping_query_id",
        "desc": "An error message, empty on success."
      },
      {
        "type": "shippingOption[]",
        "name": "shipping_options"
      },
      {
        "type": "string",
        "name": "error_message"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "blockUser": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "cancelDownloadFile": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "Identifier of a file to stop downloading."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "cancelUploadFile": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "Identifier of the file to stop uploading."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "changeChatReportSpamState": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "If true, the chat will be reported as spam; otherwise it will be marked as not spam."
      },
      {
        "type": "bool",
        "name": "is_spam_chat"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "changeImportedContacts": {
    "fields": [
      {
        "type": "contact[]",
        "name": "contacts",
        "desc": "The new list of contacts."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "changePhoneNumber": {
    "fields": [
      {
        "type": "string",
        "name": "phone_number",
        "desc": "Pass true if the phone number is used on the current device. Ignored if allow_flash_call is false."
      },
      {
        "type": "bool",
        "name": "allow_flash_call"
      },
      {
        "type": "bool",
        "name": "is_current_phone_number"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "changeStickerSet": {
    "fields": [
      {
        "type": "string",
        "name": "set_id",
        "desc": "The new value of is_archived. A sticker set can't be installed and archived simultaneously."
      },
      {
        "type": "bool",
        "name": "is_installed"
      },
      {
        "type": "bool",
        "name": "is_archived"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkAuthenticationBotToken": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "The bot token."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkAuthenticationCode": {
    "fields": [
      {
        "type": "string",
        "name": "code",
        "desc": "If the user is not yet registered; the last name of the user; optional; 0-255 characters."
      },
      {
        "type": "string",
        "name": "first_name"
      },
      {
        "type": "string",
        "name": "last_name"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkAuthenticationPassword": {
    "fields": [
      {
        "type": "string",
        "name": "password",
        "desc": "The password to check."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkChangePhoneNumberCode": {
    "fields": [
      {
        "type": "string",
        "name": "code",
        "desc": "Verification code received by SMS, phone call or flash call."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkChatInviteLink": {
    "fields": [
      {
        "type": "string",
        "name": "invite_link",
        "desc": "Invite link to be checked; should begin with \"<a href=\"https://t.me/joinchat/\",\">https://t.me/joinchat/&quot;,</a> \"<a href=\"https://telegram.me/joinchat/\",\">https://telegram.me/joinchat/&quot;,</a> or \"<a href=\"https://telegram.dog/joinchat/\"\">https://telegram.dog/joinchat/&quot;</a>."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "checkDatabaseEncryptionKey": {
    "fields": [
      {
        "type": "string",
        "name": "encryption_key",
        "desc": "Encryption key to check or set up."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "clearImportedContacts": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "clearRecentlyFoundChats": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "clearRecentStickers": {
    "fields": [
      {
        "type": "bool",
        "name": "is_attached",
        "desc": "Pass true to clear the list of stickers recently attached to photo or video files; pass false to clear the list of recently sent stickers."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "close": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "closeChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "closeSecretChat": {
    "fields": [
      {
        "type": "number",
        "name": "secret_chat_id",
        "desc": "Secret chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createBasicGroupChat": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "Basic group identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createCall": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Description of the call protocols supported by the client."
      },
      {
        "type": "callProtocol",
        "name": "protocol"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createNewBasicGroupChat": {
    "fields": [
      {
        "type": "number[]",
        "name": "user_ids",
        "desc": "Title of the new basic group; 1-255 characters."
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createNewSecretChat": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Identifier of the target user."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createNewStickerSet": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "List of stickers to be added to the set."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "name"
      },
      {
        "type": "bool",
        "name": "is_masks"
      },
      {
        "type": "inputSticker[]",
        "name": "stickers"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createNewSupergroupChat": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "Chat description; 0-255 characters."
      },
      {
        "type": "bool",
        "name": "is_channel"
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createPrivateChat": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createSecretChat": {
    "fields": [
      {
        "type": "number",
        "name": "secret_chat_id",
        "desc": "Secret Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createSupergroupChat": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Supergroup or channel identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "createTemporaryPassword": {
    "fields": [
      {
        "type": "string",
        "name": "password",
        "desc": "Time during which the temporary password will be valid, in seconds; should be between 60 and 86400."
      },
      {
        "type": "number",
        "name": "valid_for"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteAccount": {
    "fields": [
      {
        "type": "string",
        "name": "reason",
        "desc": "The reason why the account was deleted; optional."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteChatHistory": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Pass true if the chat should be removed from the chats list."
      },
      {
        "type": "bool",
        "name": "remove_from_chat_list"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteChatMessagesFromUser": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "User identifier."
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteChatReplyMarkup": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The message identifier of the used keyboard."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteFile": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "Identifier of the file to delete."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Pass true to try to delete outgoing messages for all chat members (may fail if messages are too old). Always true for supergroups, channels and secret chats."
      },
      {
        "type": "string[]",
        "name": "message_ids"
      },
      {
        "type": "bool",
        "name": "revoke"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteProfilePhoto": {
    "fields": [
      {
        "type": "string",
        "name": "profile_photo_id",
        "desc": "Identifier of the profile photo to delete."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteSavedCredentials": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteSavedOrderInfo": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "deleteSupergroup": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Identifier of the supergroup or channel."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "destroy": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "discardCall": {
    "fields": [
      {
        "type": "number",
        "name": "call_id",
        "desc": "Identifier of the connection used during the call."
      },
      {
        "type": "bool",
        "name": "is_disconnected"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "string",
        "name": "connection_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "downloadFile": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "Priority of the download (1-32). The higher the priority, the earlier the file will be downloaded. If the priorities of two files are equal, then the last one for which <a class=\"el\" href=\"classtd_1_1td__api_1_1download_file.html\">downloadFile</a> was called will be downloaded first."
      },
      {
        "type": "number",
        "name": "priority"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editInlineMessageLiveLocation": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "New location content of the message; may be null. Pass null to stop sharing the live location."
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "location",
        "name": "location"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editInlineMessageCaption": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "New message content caption; 0-200 characters."
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editInlineMessageReplyMarkup": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "New message reply markup."
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editInlineMessageText": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "New text content of the message. Should be of type InputMessageText."
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editMessageCaption": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New message content caption; 0-200 characters."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editMessageLiveLocation": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New location content of the message; may be null. Pass null to stop sharing the live location."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "location",
        "name": "location"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editMessageReplyMarkup": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New message reply markup."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "finishFileGeneration": {
    "fields": [
      {
        "type": "string",
        "name": "generation_id",
        "desc": "If set, means that file generation has failed and should be terminated."
      },
      {
        "type": "error",
        "name": "error"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "editMessageText": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New text content of the message. Should be of type InputMessageText."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "forwardMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "True, if the messages should be grouped into an album after forwarding. For this to work, no more than 10 messages may be forwarded, and all of them must be photo or video messages."
      },
      {
        "type": "string",
        "name": "from_chat_id"
      },
      {
        "type": "string[]",
        "name": "message_ids"
      },
      {
        "type": "bool",
        "name": "disable_notification"
      },
      {
        "type": "bool",
        "name": "from_background"
      },
      {
        "type": "bool",
        "name": "as_album"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "generateChatInviteLink": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getAccountTtl": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getActiveLiveLocationMessages": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getActiveSessions": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getArchivedStickerSets": {
    "fields": [
      {
        "type": "bool",
        "name": "is_masks",
        "desc": "Maximum number of sticker sets to return."
      },
      {
        "type": "string",
        "name": "offset_sticker_set_id"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getAttachedStickerSets": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "File identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getAuthorizationState": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getBasicGroup": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "Basic group identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getBasicGroupFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "Basic group identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getBlockedUsers": {
    "fields": [
      {
        "type": "number",
        "name": "offset",
        "desc": "Maximum number of users to return; up to 100."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getCallbackQueryAnswer": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Query payload."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "CallbackQueryPayload",
        "name": "payload"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatAdministrators": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatEventLog": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "User identifiers by which to filter events. By default, events relating to all users will be returned."
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "string",
        "name": "from_event_id"
      },
      {
        "type": "number",
        "name": "limit"
      },
      {
        "type": "chatEventLogFilters",
        "name": "filters"
      },
      {
        "type": "number[]",
        "name": "user_ids"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatHistory": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "If true, returns only messages that are available locally without sending network requests."
      },
      {
        "type": "string",
        "name": "from_message_id"
      },
      {
        "type": "number",
        "name": "offset"
      },
      {
        "type": "number",
        "name": "limit"
      },
      {
        "type": "bool",
        "name": "only_local"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatMember": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "User identifier."
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatMessageByDate": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Point in time (Unix timestamp) relative to which to search for messages."
      },
      {
        "type": "number",
        "name": "date"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChatReportSpamState": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getChats": {
    "fields": [
      {
        "type": "string",
        "name": "offset_order",
        "desc": "The maximum number of chats to be returned. It is possible that fewer chats than the limit are returned even if the end of the list is not reached."
      },
      {
        "type": "string",
        "name": "offset_chat_id"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getCreatedPublicChats": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getFavoriteStickers": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getFile": {
    "fields": [
      {
        "type": "number",
        "name": "file_id",
        "desc": "Identifier of the file to get."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getFileExtension": {
    "fields": [
      {
        "type": "string",
        "name": "mime_type",
        "desc": "The MIME type of the file."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getFileMimeType": {
    "fields": [
      {
        "type": "string",
        "name": "file_name",
        "desc": "The name of the file or path to the file."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getGameHighScores": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "User identifier."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getGroupsInCommon": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Maximum number of chats to be returned; up to 100."
      },
      {
        "type": "string",
        "name": "offset_chat_id"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getImportedContactCount": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getInlineGameHighScores": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "User identifier."
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getInlineQueryResults": {
    "fields": [
      {
        "type": "number",
        "name": "bot_user_id",
        "desc": "Offset of the first entry to return."
      },
      {
        "type": "string",
        "name": "chat_id"
      },
      {
        "type": "location",
        "name": "user_location"
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "string",
        "name": "offset"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getInstalledStickerSets": {
    "fields": [
      {
        "type": "bool",
        "name": "is_masks",
        "desc": "Pass true to return mask sticker sets; pass false to return ordinary sticker sets."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getMe": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getInviteText": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the message to get."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifiers of the messages to get."
      },
      {
        "type": "string[]",
        "name": "message_ids"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getNetworkStatistics": {
    "fields": [
      {
        "type": "bool",
        "name": "only_current",
        "desc": "If true, returns only data for the current library launch."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getNotificationSettings": {
    "fields": [
      {
        "type": "NotificationSettingsScope",
        "name": "scope",
        "desc": "Scope for which to return the notification settings information."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getOption": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "The name of the option."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getPasswordState": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getPaymentForm": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Message identifier."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getPaymentReceipt": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Message identifier."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getProxy": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getPublicMessageLink": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the message."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getRecentInlineBots": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getRecentlyVisitedTMeUrls": {
    "fields": [
      {
        "type": "string",
        "name": "referrer",
        "desc": "Google Play referrer to identify the user."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getRecentStickers": {
    "fields": [
      {
        "type": "bool",
        "name": "is_attached",
        "desc": "Pass true to return stickers and masks that were recently attached to photos or video files; pass false to return recently sent stickers."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getRecoveryEmailAddress": {
    "fields": [
      {
        "type": "string",
        "name": "password",
        "desc": "The password for the current user."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getRemoteFile": {
    "fields": [
      {
        "type": "string",
        "name": "remote_file_id",
        "desc": "File type, if known."
      },
      {
        "type": "FileType",
        "name": "file_type"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSavedAnimations": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSavedOrderInfo": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSecretChat": {
    "fields": [
      {
        "type": "number",
        "name": "secret_chat_id",
        "desc": "Secret chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getStickerEmojis": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "Sticker file identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getStickers": {
    "fields": [
      {
        "type": "string",
        "name": "emoji",
        "desc": "Maximum number of stickers to be returned."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getStickerSet": {
    "fields": [
      {
        "type": "string",
        "name": "set_id",
        "desc": "Identifier of the sticker set."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getStorageStatistics": {
    "fields": [
      {
        "type": "number",
        "name": "chat_limit",
        "desc": "Maximum number of chats with the largest storage usage for which separate statistics should be returned. All other chats will be grouped in entries with chat_id == 0. If the chat info database is not used, the chat_limit is ignored and is always set to 0."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getStorageStatisticsFast": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSupergroup": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Supergroup or channel identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSupergroupFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Supergroup or channel identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSupportUser": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getSupergroupMembers": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "The maximum number of users be returned; up to 200."
      },
      {
        "type": "SupergroupMembersFilter",
        "name": "filter"
      },
      {
        "type": "number",
        "name": "offset"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getTemporaryPasswordState": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getTermsOfService": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getTextEntities": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "The text in which to look for entites."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getTopChats": {
    "fields": [
      {
        "type": "TopChatCategory",
        "name": "category",
        "desc": "Maximum number of chats to be returned; up to 30."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getUser": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getUserFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getUserPrivacySettingRules": {
    "fields": [
      {
        "type": "UserPrivacySetting",
        "name": "setting",
        "desc": "The privacy setting."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getUserProfilePhotos": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Maximum number of photos to be returned; up to 100."
      },
      {
        "type": "number",
        "name": "offset"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getTrendingStickerSets": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getWallpapers": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "getWebPageInstantView": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "If true, the full instant view for the web page will be returned."
      },
      {
        "type": "bool",
        "name": "force_full"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "joinChatByInviteLink": {
    "fields": [
      {
        "type": "string",
        "name": "invite_link",
        "desc": "Invite link to import; should begin with \"<a href=\"https://t.me/joinchat/\",\">https://t.me/joinchat/&quot;,</a> \"<a href=\"https://telegram.me/joinchat/\",\">https://telegram.me/joinchat/&quot;,</a> or \"<a href=\"https://telegram.dog/joinchat/\"\">https://telegram.dog/joinchat/&quot;</a>."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "logOut": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "openChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "openMessageContent": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the message with the opened content."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "optimizeStorage": {
    "fields": [
      {
        "type": "string",
        "name": "size",
        "desc": "Same as in <a class=\"el\" href=\"classtd_1_1td__api_1_1get_storage_statistics.html\">getStorageStatistics</a>. Affects only returned statistics."
      },
      {
        "type": "number",
        "name": "ttl"
      },
      {
        "type": "number",
        "name": "count"
      },
      {
        "type": "number",
        "name": "immunity_delay"
      },
      {
        "type": "FileType[]",
        "name": "file_types"
      },
      {
        "type": "string[]",
        "name": "chat_ids"
      },
      {
        "type": "string[]",
        "name": "exclude_chat_ids"
      },
      {
        "type": "number",
        "name": "chat_limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "pinSupergroupMessage": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "True, if there should be no notification about the pinned message."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "bool",
        "name": "disable_notification"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "processDcUpdate": {
    "fields": [
      {
        "type": "string",
        "name": "dc",
        "desc": "Value of the \"addr\" parameter of the notification."
      },
      {
        "type": "string",
        "name": "addr"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "readAllChatMentions": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "recoverAuthenticationPassword": {
    "fields": [
      {
        "type": "string",
        "name": "recovery_code",
        "desc": "Recovery code to check."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "recoverPassword": {
    "fields": [
      {
        "type": "string",
        "name": "recovery_code",
        "desc": "Recovery code to check."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "registerDevice": {
    "fields": [
      {
        "type": "DeviceToken",
        "name": "device_token",
        "desc": "Device token."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeContacts": {
    "fields": [
      {
        "type": "number[]",
        "name": "user_ids",
        "desc": "Identifiers of users to be deleted."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeFavoriteSticker": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "Sticker file to delete from the list."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeRecentHashtag": {
    "fields": [
      {
        "type": "string",
        "name": "hashtag",
        "desc": "Hashtag to delete."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeRecentlyFoundChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the chat to be removed."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeRecentSticker": {
    "fields": [
      {
        "type": "bool",
        "name": "is_attached",
        "desc": "Sticker file to delete."
      },
      {
        "type": "InputFile",
        "name": "sticker"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeSavedAnimation": {
    "fields": [
      {
        "type": "InputFile",
        "name": "animation",
        "desc": "Animation file to be removed."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeStickerFromSet": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "Sticker."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "removeTopChat": {
    "fields": [
      {
        "type": "TopChatCategory",
        "name": "category",
        "desc": "Chat identifier."
      },
      {
        "type": "string",
        "name": "chat_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "reorderInstalledStickerSets": {
    "fields": [
      {
        "type": "bool",
        "name": "is_masks",
        "desc": "Identifiers of installed sticker sets in the new correct order."
      },
      {
        "type": "string[]",
        "name": "sticker_set_ids"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "reportChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The reason for reporting the chat."
      },
      {
        "type": "ChatReportReason",
        "name": "reason"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "getWebPagePreview": {
    "fields": [
      {
        "type": "string",
        "name": "message_text",
        "desc": "Message text."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "importContacts": {
    "fields": [
      {
        "type": "contact[]",
        "name": "contacts",
        "desc": "The list of contacts to import or edit."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "reportSupergroupSpam": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Identifiers of messages sent in the supergroup by the user. This list should be non-empty."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "string[]",
        "name": "message_ids"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "requestAuthenticationPasswordRecovery": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "resendAuthenticationCode": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "requestPasswordRecovery": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "resendChangePhoneNumberCode": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "resetAllNotificationSettings": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "resetNetworkStatistics": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchCallMessages": {
    "fields": [
      {
        "type": "string",
        "name": "from_message_id",
        "desc": "If true, returns only messages with missed calls."
      },
      {
        "type": "number",
        "name": "limit"
      },
      {
        "type": "bool",
        "name": "only_missed"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchChatRecentLocationMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Maximum number of messages to be returned."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchChats": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Maximum number of chats to be returned."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchContacts": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Maximum number of users to be returned."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchHashtags": {
    "fields": [
      {
        "type": "string",
        "name": "prefix",
        "desc": "Maximum number of hashtags to be returned."
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchMessages": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "The maximum number of messages to be returned, up to 100."
      },
      {
        "type": "number",
        "name": "offset_date"
      },
      {
        "type": "string",
        "name": "offset_chat_id"
      },
      {
        "type": "string",
        "name": "offset_message_id"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchPublicChat": {
    "fields": [
      {
        "type": "string",
        "name": "username",
        "desc": "Username to be resolved."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchPublicChats": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Query to search for."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchSecretMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "A filter for the content of messages in the search results."
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "string",
        "name": "from_search_id"
      },
      {
        "type": "number",
        "name": "limit"
      },
      {
        "type": "SearchMessagesFilter",
        "name": "filter"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchStickerSet": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "Name of the sticker set."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendBotStartMessage": {
    "fields": [
      {
        "type": "number",
        "name": "bot_user_id",
        "desc": "A hidden parameter sent to the bot for deep linking purposes (<a href=\"https://api.telegram.org/bots\">https://api.telegram.org/bots</a>#deep-linking)."
      },
      {
        "type": "string",
        "name": "chat_id"
      },
      {
        "type": "string",
        "name": "parameter"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendCallDebugInformation": {
    "fields": [
      {
        "type": "number",
        "name": "call_id",
        "desc": "Debug information in application-specific format."
      },
      {
        "type": "string",
        "name": "debug_information"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendCallRating": {
    "fields": [
      {
        "type": "number",
        "name": "call_id",
        "desc": "An optional user comment if the rating is less than 5."
      },
      {
        "type": "number",
        "name": "rating"
      },
      {
        "type": "string",
        "name": "comment"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchChatMembers": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The maximum number of users to be returned."
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "number",
        "name": "limit"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendChatAction": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The action description."
      },
      {
        "type": "ChatAction",
        "name": "action"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendCustomRequest": {
    "fields": [
      {
        "type": "string",
        "name": "method",
        "desc": "JSON-serialized method parameters."
      },
      {
        "type": "string",
        "name": "parameters"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendChatSetTtlMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New TTL value, in seconds."
      },
      {
        "type": "number",
        "name": "ttl"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendInlineQueryResultMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the inline result."
      },
      {
        "type": "string",
        "name": "reply_to_message_id"
      },
      {
        "type": "bool",
        "name": "disable_notification"
      },
      {
        "type": "bool",
        "name": "from_background"
      },
      {
        "type": "string",
        "name": "query_id"
      },
      {
        "type": "string",
        "name": "result_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The content of the message to be sent."
      },
      {
        "type": "string",
        "name": "reply_to_message_id"
      },
      {
        "type": "bool",
        "name": "disable_notification"
      },
      {
        "type": "bool",
        "name": "from_background"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendPaymentForm": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The credentials chosen by user for payment."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "string",
        "name": "order_info_id"
      },
      {
        "type": "string",
        "name": "shipping_option_id"
      },
      {
        "type": "InputCredentials",
        "name": "credentials"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendMessageAlbum": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Contents of messages to be sent."
      },
      {
        "type": "string",
        "name": "reply_to_message_id"
      },
      {
        "type": "bool",
        "name": "disable_notification"
      },
      {
        "type": "bool",
        "name": "from_background"
      },
      {
        "type": "InputMessageContent[]",
        "name": "input_message_contents"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setAccountTtl": {
    "fields": [
      {
        "type": "accountTtl",
        "name": "ttl",
        "desc": "New account TTL."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setAlarm": {
    "fields": [
      {
        "type": "double",
        "name": "seconds",
        "desc": "Number of seconds before the function returns."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "searchChatMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Filter for message content in the search results."
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "from_message_id"
      },
      {
        "type": "number",
        "name": "offset"
      },
      {
        "type": "number",
        "name": "limit"
      },
      {
        "type": "SearchMessagesFilter",
        "name": "filter"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "sendChatScreenshotTakenNotification": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setAuthenticationPhoneNumber": {
    "fields": [
      {
        "type": "string",
        "name": "phone_number",
        "desc": "Pass true if the phone number is used on the current device. Ignored if allow_flash_call is false."
      },
      {
        "type": "bool",
        "name": "allow_flash_call"
      },
      {
        "type": "bool",
        "name": "is_current_phone_number"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setBio": {
    "fields": [
      {
        "type": "string",
        "name": "bio",
        "desc": "The new value of the user bio; 0-70 characters without line feeds."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setBotUpdatesStatus": {
    "fields": [
      {
        "type": "number",
        "name": "pending_update_count",
        "desc": "The last error message."
      },
      {
        "type": "string",
        "name": "error_message"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setChatClientData": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of client_data."
      },
      {
        "type": "string",
        "name": "client_data"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setChatDraftMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New draft message; may be null."
      },
      {
        "type": "draftMessage",
        "name": "draft_message"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setChatMemberStatus": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The new status of the member in the chat."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "ChatMemberStatus",
        "name": "status"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setChatPhoto": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New chat photo. You can use a zero InputFileId to delete the chat photo. Files that are accessible only by HTTP URL are not acceptable."
      },
      {
        "type": "InputFile",
        "name": "photo"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setChatTitle": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New title of the chat; 1-255 characters."
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setDatabaseEncryptionKey": {
    "fields": [
      {
        "type": "string",
        "name": "new_encryption_key",
        "desc": "New encryption key."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setFileGenerationProgress": {
    "fields": [
      {
        "type": "string",
        "name": "generation_id",
        "desc": "The number of bytes already generated."
      },
      {
        "type": "number",
        "name": "expected_size"
      },
      {
        "type": "number",
        "name": "local_prefix_size"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setGameScore": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "bool",
        "name": "edit_message"
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "number",
        "name": "score"
      },
      {
        "type": "bool",
        "name": "force"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setInlineGameScore": {
    "fields": [
      {
        "type": "string",
        "name": "inline_message_id",
        "desc": "Pass true to update the score even if it decreases. If the score is 0, the user will be deleted from the high score table."
      },
      {
        "type": "bool",
        "name": "edit_message"
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "number",
        "name": "score"
      },
      {
        "type": "bool",
        "name": "force"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setName": {
    "fields": [
      {
        "type": "string",
        "name": "first_name",
        "desc": "The new value of the optional last name for the user; 0-255 characters."
      },
      {
        "type": "string",
        "name": "last_name"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setNetworkType": {
    "fields": [
      {
        "type": "NetworkType",
        "name": "type",
        "desc": "The new network type. By default, <a class=\"el\" href=\"classtd_1_1td__api_1_1network_type_other.html\">networkTypeOther</a>."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setNotificationSettings": {
    "fields": [
      {
        "type": "NotificationSettingsScope",
        "name": "scope",
        "desc": "The new notification settings for the given scope."
      },
      {
        "type": "notificationSettings",
        "name": "notification_settings"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setOption": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "The new value of the option."
      },
      {
        "type": "OptionValue",
        "name": "value"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setPassword": {
    "fields": [
      {
        "type": "string",
        "name": "old_password",
        "desc": "New recovery email address; may be empty."
      },
      {
        "type": "string",
        "name": "new_password"
      },
      {
        "type": "string",
        "name": "new_hint"
      },
      {
        "type": "bool",
        "name": "set_recovery_email_address"
      },
      {
        "type": "string",
        "name": "new_recovery_email_address"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setPinnedChats": {
    "fields": [
      {
        "type": "string[]",
        "name": "chat_ids",
        "desc": "The new list of pinned chats."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setProfilePhoto": {
    "fields": [
      {
        "type": "InputFile",
        "name": "photo",
        "desc": "Profile photo to set. <a class=\"el\" href=\"classtd_1_1td__api_1_1input_file_id.html\">inputFileId</a> and <a class=\"el\" href=\"classtd_1_1td__api_1_1input_file_remote.html\">inputFileRemote</a> may still be unsupported."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setProxy": {
    "fields": [
      {
        "type": "Proxy",
        "name": "proxy",
        "desc": "<a class=\"el\" href=\"classtd_1_1td__api_1_1_proxy.html\">Proxy</a> server to use. Specify null to remove the proxy server."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setRecoveryEmailAddress": {
    "fields": [
      {
        "type": "string",
        "name": "password",
        "desc": "New recovery email address."
      },
      {
        "type": "string",
        "name": "new_recovery_email_address"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setStickerPositionInSet": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "New position of the sticker in the set, zero-based."
      },
      {
        "type": "number",
        "name": "position"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setSupergroupDescription": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New supergroup or channel description; 0-255 characters."
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setSupergroupStickerSet": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New value of the supergroup sticker set identifier. Use 0 to remove the supergroup sticker set."
      },
      {
        "type": "string",
        "name": "sticker_set_id"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setSupergroupUsername": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New value of the username. Use an empty string to remove the username."
      },
      {
        "type": "string",
        "name": "username"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setTdlibParameters": {
    "fields": [
      {
        "type": "tdlibParameters",
        "name": "parameters",
        "desc": "Parameters."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setUsername": {
    "fields": [
      {
        "type": "string",
        "name": "username",
        "desc": "The new value of the username. Use an empty string to remove the username."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "setUserPrivacySettingRules": {
    "fields": [
      {
        "type": "UserPrivacySetting",
        "name": "setting",
        "desc": "The new privacy rules."
      },
      {
        "type": "userPrivacySettingRules",
        "name": "rules"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "terminateAllOtherSessions": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "terminateSession": {
    "fields": [
      {
        "type": "string",
        "name": "session_id",
        "desc": "Session identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallBytes": {
    "fields": [
      {
        "type": "string",
        "name": "x",
        "desc": "Bytes to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallEmpty": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallString": {
    "fields": [
      {
        "type": "string",
        "name": "x",
        "desc": "String to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallVectorInt": {
    "fields": [
      {
        "type": "number[]",
        "name": "x",
        "desc": "Vector of numbers to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallVectorIntObject": {
    "fields": [
      {
        "type": "testInt[]",
        "name": "x",
        "desc": "Vector of objects to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallVectorString": {
    "fields": [
      {
        "type": "string[]",
        "name": "x",
        "desc": "Vector of strings to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testCallVectorStringObject": {
    "fields": [
      {
        "type": "testString[]",
        "name": "x",
        "desc": "Vector of objects to return."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testGetDifference": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "testNetwork": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "testSquareInt": {
    "fields": [
      {
        "type": "number",
        "name": "x",
        "desc": "Number to square."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "testUseError": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "testUseUpdate": {
    "fields": [],
    "extends": "TDFunction",
    "type": "function"
  },
  "toggleBasicGroupAdministrators": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "New value of everyone_is_administrator."
      },
      {
        "type": "bool",
        "name": "everyone_is_administrator"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "toggleChatIsPinned": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of is_pinned."
      },
      {
        "type": "bool",
        "name": "is_pinned"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "toggleSupergroupInvites": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New value of anyone_can_invite."
      },
      {
        "type": "bool",
        "name": "anyone_can_invite"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "toggleSupergroupIsAllHistoryAvailable": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "The new value of is_all_history_available."
      },
      {
        "type": "bool",
        "name": "is_all_history_available"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "toggleSupergroupSignMessages": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New value of sign_messages."
      },
      {
        "type": "bool",
        "name": "sign_messages"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "upgradeBasicGroupChatToSupergroupChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the chat to upgrade."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "uploadFile": {
    "fields": [
      {
        "type": "InputFile",
        "name": "file",
        "desc": "Priority of the upload (1-32). The higher the priority, the earlier the file will be uploaded. If the priorities of two files are equal, then the first one for which <a class=\"el\" href=\"classtd_1_1td__api_1_1upload_file.html\">uploadFile</a> was called will be uploaded first."
      },
      {
        "type": "FileType",
        "name": "file_type"
      },
      {
        "type": "number",
        "name": "priority"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "uploadStickerFile": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "PNG image with the sticker; must be up to 512 kB in size and fit in 512x512 square."
      },
      {
        "type": "InputFile",
        "name": "png_sticker"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "unpinSupergroupMessage": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Identifier of the supergroup or channel."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "unblockUser": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "validateOrderInfo": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "True, if the order information can be saved."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "orderInfo",
        "name": "order_info"
      },
      {
        "type": "bool",
        "name": "allow_save"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "viewMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "True, if messages in closed chats should be marked as read."
      },
      {
        "type": "string[]",
        "name": "message_ids"
      },
      {
        "type": "bool",
        "name": "force_read"
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "viewTrendingStickerSets": {
    "fields": [
      {
        "type": "string[]",
        "name": "sticker_set_ids",
        "desc": "Identifiers of viewed trending sticker sets."
      }
    ],
    "extends": "TDFunction",
    "type": "function"
  },
  "accountTtl": {
    "fields": [
      {
        "type": "number",
        "name": "days",
        "desc": "Number of days of inactivity before the account will be flagged for deletion; should range from 30-366 days."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "animation": {
    "fields": [
      {
        "type": "number",
        "name": "duration",
        "desc": "File containing the animation."
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "file_name"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      },
      {
        "type": "file",
        "name": "animation"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "animations": {
    "fields": [
      {
        "type": "animation[]",
        "name": "animations",
        "desc": "List of animations."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "audio": {
    "fields": [
      {
        "type": "number",
        "name": "duration",
        "desc": "File containing the audio."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "performer"
      },
      {
        "type": "string",
        "name": "file_name"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "photoSize",
        "name": "album_cover_thumbnail"
      },
      {
        "type": "file",
        "name": "audio"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "AuthenticationCodeType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "authenticationCodeTypeCall": {
    "fields": [
      {
        "type": "number",
        "name": "length",
        "desc": "Length of the code."
      }
    ],
    "extends": "AuthenticationCodeType",
    "type": "object"
  },
  "authenticationCodeInfo": {
    "fields": [
      {
        "type": "AuthenticationCodeType",
        "name": "type",
        "desc": "Timeout before the code should be re-sent, in seconds."
      },
      {
        "type": "AuthenticationCodeType",
        "name": "next_type"
      },
      {
        "type": "number",
        "name": "timeout"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "authenticationCodeTypeFlashCall": {
    "fields": [
      {
        "type": "string",
        "name": "pattern",
        "desc": "Pattern of the phone number from which the call will be made."
      }
    ],
    "extends": "AuthenticationCodeType",
    "type": "object"
  },
  "authenticationCodeTypeSms": {
    "fields": [
      {
        "type": "number",
        "name": "length",
        "desc": "Length of the code."
      }
    ],
    "extends": "AuthenticationCodeType",
    "type": "object"
  },
  "authenticationCodeTypeTelegramMessage": {
    "fields": [
      {
        "type": "number",
        "name": "length",
        "desc": "Length of the code."
      }
    ],
    "extends": "AuthenticationCodeType",
    "type": "object"
  },
  "AuthorizationState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "authorizationStateClosed": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateClosing": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateLoggingOut": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateReady": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateWaitCode": {
    "fields": [
      {
        "type": "bool",
        "name": "is_registered",
        "desc": "Information about the authorization code that was sent."
      },
      {
        "type": "authenticationCodeInfo",
        "name": "code_info"
      }
    ],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateWaitEncryptionKey": {
    "fields": [
      {
        "type": "bool",
        "name": "is_encrypted",
        "desc": "True, if the database is currently encrypted."
      }
    ],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateWaitPassword": {
    "fields": [
      {
        "type": "string",
        "name": "password_hint",
        "desc": "Pattern of the email address to which the recovery email was sent; empty until a recovery email has been sent."
      },
      {
        "type": "bool",
        "name": "has_recovery_email_address"
      },
      {
        "type": "string",
        "name": "recovery_email_address_pattern"
      }
    ],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateWaitPhoneNumber": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "authorizationStateWaitTdlibParameters": {
    "fields": [],
    "extends": "AuthorizationState",
    "type": "object"
  },
  "basicGroup": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Identifier of the supergroup to which this group was upgraded; 0 if none."
      },
      {
        "type": "number",
        "name": "member_count"
      },
      {
        "type": "ChatMemberStatus",
        "name": "status"
      },
      {
        "type": "bool",
        "name": "everyone_is_administrator"
      },
      {
        "type": "bool",
        "name": "is_active"
      },
      {
        "type": "number",
        "name": "upgraded_to_supergroup_id"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "basicGroupFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "creator_user_id",
        "desc": "Invite link for this group; available only for the group creator and only after it has been generated at least once."
      },
      {
        "type": "chatMember[]",
        "name": "members"
      },
      {
        "type": "string",
        "name": "invite_link"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "botCommand": {
    "fields": [
      {
        "type": "string",
        "name": "command",
        "desc": "Description of the bot command."
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "botInfo": {
    "fields": [
      {
        "type": "string",
        "name": "description",
        "desc": "A list of commands supported by the bot."
      },
      {
        "type": "botCommand[]",
        "name": "commands"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "call": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Call state."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "bool",
        "name": "is_outgoing"
      },
      {
        "type": "CallState",
        "name": "state"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "CallbackQueryPayload": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "callbackQueryAnswer": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "URL to be opened."
      },
      {
        "type": "bool",
        "name": "show_alert"
      },
      {
        "type": "string",
        "name": "url"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "callbackQueryPayloadData": {
    "fields": [
      {
        "type": "string",
        "name": "data",
        "desc": "Data that was attached to the callback button."
      }
    ],
    "extends": "CallbackQueryPayload",
    "type": "object"
  },
  "callConnection": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Connection peer tag."
      },
      {
        "type": "string",
        "name": "ip"
      },
      {
        "type": "string",
        "name": "ipv6"
      },
      {
        "type": "number",
        "name": "port"
      },
      {
        "type": "string",
        "name": "peer_tag"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "callbackQueryPayloadGame": {
    "fields": [
      {
        "type": "string",
        "name": "game_short_name",
        "desc": "A short name of the game that was attached to the callback button."
      }
    ],
    "extends": "CallbackQueryPayload",
    "type": "object"
  },
  "CallDiscardReason": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "callDiscardReasonDeclined": {
    "fields": [],
    "extends": "CallDiscardReason",
    "type": "object"
  },
  "callDiscardReasonDisconnected": {
    "fields": [],
    "extends": "CallDiscardReason",
    "type": "object"
  },
  "callDiscardReasonEmpty": {
    "fields": [],
    "extends": "CallDiscardReason",
    "type": "object"
  },
  "callDiscardReasonHungUp": {
    "fields": [],
    "extends": "CallDiscardReason",
    "type": "object"
  },
  "callDiscardReasonMissed": {
    "fields": [],
    "extends": "CallDiscardReason",
    "type": "object"
  },
  "callId": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Call identifier."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "CallState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "callProtocol": {
    "fields": [
      {
        "type": "bool",
        "name": "udp_p2p",
        "desc": "Maximum supported API layer; use 65."
      },
      {
        "type": "bool",
        "name": "udp_reflector"
      },
      {
        "type": "number",
        "name": "min_layer"
      },
      {
        "type": "number",
        "name": "max_layer"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "callStateError": {
    "fields": [
      {
        "type": "error",
        "name": "error",
        "desc": "Error. An error with the code 4005000 will be returned if an outgoing call is missed because of an expired timeout."
      }
    ],
    "extends": "CallState",
    "type": "object"
  },
  "callStateDiscarded": {
    "fields": [
      {
        "type": "CallDiscardReason",
        "name": "reason",
        "desc": "True, if the call debug information should be sent to the server."
      },
      {
        "type": "bool",
        "name": "need_rating"
      },
      {
        "type": "bool",
        "name": "need_debug_information"
      }
    ],
    "extends": "CallState",
    "type": "object"
  },
  "callStateExchangingKeys": {
    "fields": [],
    "extends": "CallState",
    "type": "object"
  },
  "callStateHangingUp": {
    "fields": [],
    "extends": "CallState",
    "type": "object"
  },
  "callStatePending": {
    "fields": [
      {
        "type": "bool",
        "name": "is_created",
        "desc": "True, if the call has already been received by the other party."
      },
      {
        "type": "bool",
        "name": "is_received"
      }
    ],
    "extends": "CallState",
    "type": "object"
  },
  "callStateReady": {
    "fields": [
      {
        "type": "callProtocol",
        "name": "protocol",
        "desc": "Encryption key emojis fingerprint."
      },
      {
        "type": "callConnection[]",
        "name": "connections"
      },
      {
        "type": "string",
        "name": "config"
      },
      {
        "type": "string",
        "name": "encryption_key"
      },
      {
        "type": "string[]",
        "name": "emojis"
      }
    ],
    "extends": "CallState",
    "type": "object"
  },
  "ChatAction": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "chat": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Contains client-specific data associated with the chat. (For example, the chat position or local chat notification settings can be stored here.) Persistent if a message database is used."
      },
      {
        "type": "ChatType",
        "name": "type"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "chatPhoto",
        "name": "photo"
      },
      {
        "type": "message",
        "name": "last_message"
      },
      {
        "type": "string",
        "name": "order"
      },
      {
        "type": "bool",
        "name": "is_pinned"
      },
      {
        "type": "number",
        "name": "unread_count"
      },
      {
        "type": "string",
        "name": "last_read_inbox_message_id"
      },
      {
        "type": "string",
        "name": "last_read_outbox_message_id"
      },
      {
        "type": "number",
        "name": "unread_mention_count"
      },
      {
        "type": "notificationSettings",
        "name": "notification_settings"
      },
      {
        "type": "string",
        "name": "reply_markup_message_id"
      },
      {
        "type": "draftMessage",
        "name": "draft_message"
      },
      {
        "type": "string",
        "name": "client_data"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatActionCancel": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionChoosingContact": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionChoosingLocation": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionRecordingVideo": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionRecordingVideoNote": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionRecordingVoiceNote": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionStartPlayingGame": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionTyping": {
    "fields": [],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionUploadingDocument": {
    "fields": [
      {
        "type": "number",
        "name": "progress",
        "desc": "Upload progress, as a percentage."
      }
    ],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionUploadingPhoto": {
    "fields": [
      {
        "type": "number",
        "name": "progress",
        "desc": "Upload progress, as a percentage."
      }
    ],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionUploadingVideo": {
    "fields": [
      {
        "type": "number",
        "name": "progress",
        "desc": "Upload progress, as a percentage."
      }
    ],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionUploadingVideoNote": {
    "fields": [
      {
        "type": "number",
        "name": "progress",
        "desc": "Upload progress, as a percentage."
      }
    ],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatActionUploadingVoiceNote": {
    "fields": [
      {
        "type": "number",
        "name": "progress",
        "desc": "Upload progress, as a percentage."
      }
    ],
    "extends": "ChatAction",
    "type": "object"
  },
  "chatEvent": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Action performed by the user."
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "ChatEventAction",
        "name": "action"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "ChatEventAction": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "chatEventDescriptionChanged": {
    "fields": [
      {
        "type": "string",
        "name": "old_description",
        "desc": "New chat description."
      },
      {
        "type": "string",
        "name": "new_description"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventInvitesToggled": {
    "fields": [
      {
        "type": "bool",
        "name": "anyone_can_invite",
        "desc": "New value of anyone_can_invite."
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventIsAllHistoryAvailableToggled": {
    "fields": [
      {
        "type": "bool",
        "name": "is_all_history_available",
        "desc": "New value of is_all_history_available."
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMemberInvited": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "New member status."
      },
      {
        "type": "ChatMemberStatus",
        "name": "status"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMemberJoined": {
    "fields": [],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMemberLeft": {
    "fields": [],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMemberPromoted": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "New status of the chat member."
      },
      {
        "type": "ChatMemberStatus",
        "name": "old_status"
      },
      {
        "type": "ChatMemberStatus",
        "name": "new_status"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMemberRestricted": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "New status of the chat member."
      },
      {
        "type": "ChatMemberStatus",
        "name": "old_status"
      },
      {
        "type": "ChatMemberStatus",
        "name": "new_status"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMessageDeleted": {
    "fields": [
      {
        "type": "message",
        "name": "message",
        "desc": "Deleted message."
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMessageEdited": {
    "fields": [
      {
        "type": "message",
        "name": "old_message",
        "desc": "The message after it was edited."
      },
      {
        "type": "message",
        "name": "new_message"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMessagePinned": {
    "fields": [
      {
        "type": "message",
        "name": "message",
        "desc": "Pinned message."
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventMessageUnpinned": {
    "fields": [],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventPhotoChanged": {
    "fields": [
      {
        "type": "chatPhoto",
        "name": "old_photo",
        "desc": "New chat photo value; may be null."
      },
      {
        "type": "chatPhoto",
        "name": "new_photo"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventSignMessagesToggled": {
    "fields": [
      {
        "type": "bool",
        "name": "sign_messages",
        "desc": "New value of sign_messages."
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventStickerSetChanged": {
    "fields": [
      {
        "type": "string",
        "name": "old_sticker_set_id",
        "desc": "New identifier of the chat sticker set; 0 if none."
      },
      {
        "type": "string",
        "name": "new_sticker_set_id"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventTitleChanged": {
    "fields": [
      {
        "type": "string",
        "name": "old_title",
        "desc": "New chat title."
      },
      {
        "type": "string",
        "name": "new_title"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventUsernameChanged": {
    "fields": [
      {
        "type": "string",
        "name": "old_username",
        "desc": "New chat username."
      },
      {
        "type": "string",
        "name": "new_username"
      }
    ],
    "extends": "ChatEventAction",
    "type": "object"
  },
  "chatEventLogFilters": {
    "fields": [
      {
        "type": "bool",
        "name": "message_edits",
        "desc": "True, if changes in chat settings should be returned."
      },
      {
        "type": "bool",
        "name": "message_deletions"
      },
      {
        "type": "bool",
        "name": "message_pins"
      },
      {
        "type": "bool",
        "name": "member_joins"
      },
      {
        "type": "bool",
        "name": "member_leaves"
      },
      {
        "type": "bool",
        "name": "member_invites"
      },
      {
        "type": "bool",
        "name": "member_promotions"
      },
      {
        "type": "bool",
        "name": "member_restrictions"
      },
      {
        "type": "bool",
        "name": "info_changes"
      },
      {
        "type": "bool",
        "name": "setting_changes"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatEvents": {
    "fields": [
      {
        "type": "chatEvent[]",
        "name": "events",
        "desc": "List of events."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatInviteLink": {
    "fields": [
      {
        "type": "string",
        "name": "invite_link",
        "desc": "Chat invite link."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatInviteLinkInfo": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "True, if the chat is a public supergroup or channel with a username."
      },
      {
        "type": "ChatType",
        "name": "type"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "chatPhoto",
        "name": "photo"
      },
      {
        "type": "number",
        "name": "member_count"
      },
      {
        "type": "number[]",
        "name": "member_user_ids"
      },
      {
        "type": "bool",
        "name": "is_public"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatMember": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "If the user is a bot, information about the bot; may be null. Can be null even for a bot if the bot is not a chat member."
      },
      {
        "type": "number",
        "name": "inviter_user_id"
      },
      {
        "type": "number",
        "name": "joined_chat_date"
      },
      {
        "type": "ChatMemberStatus",
        "name": "status"
      },
      {
        "type": "botInfo",
        "name": "bot_info"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatMembers": {
    "fields": [
      {
        "type": "number",
        "name": "total_count",
        "desc": "A list of chat members."
      },
      {
        "type": "chatMember[]",
        "name": "members"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "ChatMemberStatus": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "chatMemberStatusBanned": {
    "fields": [
      {
        "type": "number",
        "name": "banned_until_date",
        "desc": "Point in time (Unix timestamp) when the user will be unbanned; 0 if never. If the user is banned for more than 366 days or for less than 30 seconds from the current time, the user is considered to be banned forever."
      }
    ],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatMemberStatusAdministrator": {
    "fields": [
      {
        "type": "bool",
        "name": "can_be_edited",
        "desc": "True, if the administrator can add new administrators with a subset of his own privileges or demote administrators that were directly or indirectly promoted by him."
      },
      {
        "type": "bool",
        "name": "can_change_info"
      },
      {
        "type": "bool",
        "name": "can_post_messages"
      },
      {
        "type": "bool",
        "name": "can_edit_messages"
      },
      {
        "type": "bool",
        "name": "can_delete_messages"
      },
      {
        "type": "bool",
        "name": "can_invite_users"
      },
      {
        "type": "bool",
        "name": "can_restrict_members"
      },
      {
        "type": "bool",
        "name": "can_pin_messages"
      },
      {
        "type": "bool",
        "name": "can_promote_members"
      }
    ],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatMemberStatusCreator": {
    "fields": [
      {
        "type": "bool",
        "name": "is_member",
        "desc": "True, if the user is a member of the chat."
      }
    ],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatMemberStatusLeft": {
    "fields": [],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatMemberStatusMember": {
    "fields": [],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatMemberStatusRestricted": {
    "fields": [
      {
        "type": "bool",
        "name": "is_member",
        "desc": "True, if the user may add a web page preview to his messages. Implies can_send_messages permissions."
      },
      {
        "type": "number",
        "name": "restricted_until_date"
      },
      {
        "type": "bool",
        "name": "can_send_messages"
      },
      {
        "type": "bool",
        "name": "can_send_media_messages"
      },
      {
        "type": "bool",
        "name": "can_send_other_messages"
      },
      {
        "type": "bool",
        "name": "can_add_web_page_previews"
      }
    ],
    "extends": "ChatMemberStatus",
    "type": "object"
  },
  "chatPhoto": {
    "fields": [
      {
        "type": "file",
        "name": "small",
        "desc": "A big (640x640) chat photo."
      },
      {
        "type": "file",
        "name": "big"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "ChatReportReason": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "chatReportReasonCustom": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Report text."
      }
    ],
    "extends": "ChatReportReason",
    "type": "object"
  },
  "chatReportReasonPornography": {
    "fields": [],
    "extends": "ChatReportReason",
    "type": "object"
  },
  "chatReportReasonSpam": {
    "fields": [],
    "extends": "ChatReportReason",
    "type": "object"
  },
  "chatReportReasonViolence": {
    "fields": [],
    "extends": "ChatReportReason",
    "type": "object"
  },
  "chats": {
    "fields": [
      {
        "type": "string[]",
        "name": "chat_ids",
        "desc": "List of chat identifiers."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "chatTypeBasicGroup": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "Basic group identifier."
      }
    ],
    "extends": "ChatType",
    "type": "object"
  },
  "chatTypePrivate": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier."
      }
    ],
    "extends": "ChatType",
    "type": "object"
  },
  "chatTypeSecret": {
    "fields": [
      {
        "type": "number",
        "name": "secret_chat_id",
        "desc": "User identifier of the secret chat peer."
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "ChatType",
    "type": "object"
  },
  "chatTypeSupergroup": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "True, if the supergroup is a channel."
      },
      {
        "type": "bool",
        "name": "is_channel"
      }
    ],
    "extends": "ChatType",
    "type": "object"
  },
  "ConnectionState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "connectionStateConnecting": {
    "fields": [],
    "extends": "ConnectionState",
    "type": "object"
  },
  "connectionStateReady": {
    "fields": [],
    "extends": "ConnectionState",
    "type": "object"
  },
  "connectionStateConnectingToProxy": {
    "fields": [],
    "extends": "ConnectionState",
    "type": "object"
  },
  "chatReportSpamState": {
    "fields": [
      {
        "type": "bool",
        "name": "can_report_spam",
        "desc": "True, if a prompt with the \"Report spam\" action should be shown to the user."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "ChatType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "connectionStateUpdating": {
    "fields": [],
    "extends": "ConnectionState",
    "type": "object"
  },
  "connectionStateWaitingForNetwork": {
    "fields": [],
    "extends": "ConnectionState",
    "type": "object"
  },
  "contact": {
    "fields": [
      {
        "type": "string",
        "name": "phone_number",
        "desc": "Identifier of the user, if known; otherwise 0."
      },
      {
        "type": "string",
        "name": "first_name"
      },
      {
        "type": "string",
        "name": "last_name"
      },
      {
        "type": "number",
        "name": "user_id"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "count": {
    "fields": [
      {
        "type": "number",
        "name": "count",
        "desc": "Count."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "customRequestResult": {
    "fields": [
      {
        "type": "string",
        "name": "result",
        "desc": "A JSON-serialized result."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "DeviceToken": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "deviceTokenApplePush": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "deviceTokenBlackberryPush": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "deviceTokenGoogleCloudMessaging": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "deviceTokenMicrosoftPush": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "deviceTokenSimplePush": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "deviceTokenUbuntuPush": {
    "fields": [
      {
        "type": "string",
        "name": "token",
        "desc": "Token, may be empty to de-register a device."
      }
    ],
    "extends": "DeviceToken",
    "type": "object"
  },
  "document": {
    "fields": [
      {
        "type": "string",
        "name": "file_name",
        "desc": "File containing the document."
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      },
      {
        "type": "file",
        "name": "document"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "draftMessage": {
    "fields": [
      {
        "type": "string",
        "name": "reply_to_message_id",
        "desc": "Content of the message draft; this should always be of type <a class=\"el\" href=\"classtd_1_1td__api_1_1input_message_text.html\">inputMessageText</a>."
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_text"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "error": {
    "fields": [
      {
        "type": "number",
        "name": "code",
        "desc": "Error message; subject to future changes."
      },
      {
        "type": "string",
        "name": "message"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "file": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Information about the remote copy of the file."
      },
      {
        "type": "number",
        "name": "size"
      },
      {
        "type": "number",
        "name": "expected_size"
      },
      {
        "type": "localFile",
        "name": "local"
      },
      {
        "type": "remoteFile",
        "name": "remote"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "fileTypeAudio": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeDocument": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeNone": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypePhoto": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeProfilePhoto": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeSecret": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeSecretThumbnail": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeSticker": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeThumbnail": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeUnknown": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeVideo": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeVideoNote": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeVoiceNote": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "fileTypeWallpaper": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "foundMessages": {
    "fields": [
      {
        "type": "message[]",
        "name": "messages",
        "desc": "Value to pass as from_search_id to get more results."
      },
      {
        "type": "string",
        "name": "next_from_search_id"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "game": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Game animation; may be null."
      },
      {
        "type": "string",
        "name": "short_name"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "text"
      },
      {
        "type": "textEntity[]",
        "name": "text_entities"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "photo",
        "name": "photo"
      },
      {
        "type": "animation",
        "name": "animation"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "gameHighScore": {
    "fields": [
      {
        "type": "number",
        "name": "position",
        "desc": "User score."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "number",
        "name": "score"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "FileType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "fileTypeAnimation": {
    "fields": [],
    "extends": "FileType",
    "type": "object"
  },
  "gameHighScores": {
    "fields": [
      {
        "type": "gameHighScore[]",
        "name": "scores",
        "desc": "A list of game high scores."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "InlineKeyboardButtonType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "inlineKeyboardButtonTypeBuy": {
    "fields": [],
    "extends": "InlineKeyboardButtonType",
    "type": "object"
  },
  "inlineKeyboardButtonTypeCallback": {
    "fields": [
      {
        "type": "string",
        "name": "data",
        "desc": "Data to be sent to the bot via a callback query."
      }
    ],
    "extends": "InlineKeyboardButtonType",
    "type": "object"
  },
  "inlineKeyboardButton": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Type of the button."
      },
      {
        "type": "InlineKeyboardButtonType",
        "name": "type"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "inlineKeyboardButtonTypeCallbackGame": {
    "fields": [],
    "extends": "InlineKeyboardButtonType",
    "type": "object"
  },
  "inlineKeyboardButtonTypeSwitchInline": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "True, if the inline query should be sent from the current chat."
      },
      {
        "type": "bool",
        "name": "in_current_chat"
      }
    ],
    "extends": "InlineKeyboardButtonType",
    "type": "object"
  },
  "inlineKeyboardButtonTypeUrl": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "URL to open."
      }
    ],
    "extends": "InlineKeyboardButtonType",
    "type": "object"
  },
  "InlineQueryResult": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "hashtags": {
    "fields": [
      {
        "type": "string[]",
        "name": "hashtags",
        "desc": "A list of hashtags."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "importedContacts": {
    "fields": [
      {
        "type": "number[]",
        "name": "user_ids",
        "desc": "The number of users that imported the corresponding contact; 0 for already registered users or if unavailable."
      },
      {
        "type": "number[]",
        "name": "importer_count"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "inlineQueryResultAnimation": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Animation title."
      },
      {
        "type": "animation",
        "name": "animation"
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultDocument": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Document description."
      },
      {
        "type": "document",
        "name": "document"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultGame": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Game result."
      },
      {
        "type": "game",
        "name": "game"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultContact": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Result thumbnail; may be null."
      },
      {
        "type": "contact",
        "name": "contact"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultLocation": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Result thumbnail; may be null."
      },
      {
        "type": "location",
        "name": "location"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultPhoto": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "A short description of the result, if known."
      },
      {
        "type": "photo",
        "name": "photo"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultSticker": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Sticker."
      },
      {
        "type": "sticker",
        "name": "sticker"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultVenue": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Result thumbnail; may be null."
      },
      {
        "type": "venue",
        "name": "venue"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultVideo": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Description of the video."
      },
      {
        "type": "video",
        "name": "video"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultArticle": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Result thumbnail; may be null."
      },
      {
        "type": "string",
        "name": "url"
      },
      {
        "type": "bool",
        "name": "hide_url"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultAudio": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Audio file."
      },
      {
        "type": "audio",
        "name": "audio"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResultVoiceNote": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Title of the voice note."
      },
      {
        "type": "voiceNote",
        "name": "voice_note"
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "InlineQueryResult",
    "type": "object"
  },
  "inlineQueryResults": {
    "fields": [
      {
        "type": "string",
        "name": "inline_query_id",
        "desc": "Parameter for the bot start message."
      },
      {
        "type": "string",
        "name": "next_offset"
      },
      {
        "type": "InlineQueryResult[]",
        "name": "results"
      },
      {
        "type": "string",
        "name": "switch_pm_text"
      },
      {
        "type": "string",
        "name": "switch_pm_parameter"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "InputCredentials": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "inputCredentialsAndroidPay": {
    "fields": [
      {
        "type": "string",
        "name": "data",
        "desc": "JSON-encoded data with the credential identifier."
      }
    ],
    "extends": "InputCredentials",
    "type": "object"
  },
  "inputCredentialsApplePay": {
    "fields": [
      {
        "type": "string",
        "name": "data",
        "desc": "JSON-encoded data with the credential identifier."
      }
    ],
    "extends": "InputCredentials",
    "type": "object"
  },
  "inputCredentialsNew": {
    "fields": [
      {
        "type": "string",
        "name": "data",
        "desc": "True, if the credential identifier can be saved on the server side."
      },
      {
        "type": "bool",
        "name": "allow_save"
      }
    ],
    "extends": "InputCredentials",
    "type": "object"
  },
  "inputCredentialsSaved": {
    "fields": [
      {
        "type": "string",
        "name": "saved_credentials_id",
        "desc": "Identifier of the saved credentials."
      }
    ],
    "extends": "InputCredentials",
    "type": "object"
  },
  "InputFile": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "inputFileGenerated": {
    "fields": [
      {
        "type": "string",
        "name": "original_path",
        "desc": "Expected size of the generated file; 0 if unknown."
      },
      {
        "type": "string",
        "name": "conversion"
      },
      {
        "type": "number",
        "name": "expected_size"
      }
    ],
    "extends": "InputFile",
    "type": "object"
  },
  "inputFileId": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Unique file identifier."
      }
    ],
    "extends": "InputFile",
    "type": "object"
  },
  "inputFileLocal": {
    "fields": [
      {
        "type": "string",
        "name": "path",
        "desc": "Local path to the file."
      }
    ],
    "extends": "InputFile",
    "type": "object"
  },
  "inputFileRemote": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Remote file identifier."
      }
    ],
    "extends": "InputFile",
    "type": "object"
  },
  "InputInlineQueryResult": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "inputInlineQueryResultAnimatedGif": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageAnimation, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "string",
        "name": "gif_url"
      },
      {
        "type": "number",
        "name": "gif_duration"
      },
      {
        "type": "number",
        "name": "gif_width"
      },
      {
        "type": "number",
        "name": "gif_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultAnimatedMpeg4": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageAnimation, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "string",
        "name": "mpeg4_url"
      },
      {
        "type": "number",
        "name": "mpeg4_duration"
      },
      {
        "type": "number",
        "name": "mpeg4_width"
      },
      {
        "type": "number",
        "name": "mpeg4_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultArticle": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "url"
      },
      {
        "type": "bool",
        "name": "hide_url"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "number",
        "name": "thumbnail_width"
      },
      {
        "type": "number",
        "name": "thumbnail_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultAudio": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageAudio, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "performer"
      },
      {
        "type": "string",
        "name": "audio_url"
      },
      {
        "type": "number",
        "name": "audio_duration"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultContact": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "contact",
        "name": "contact"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "number",
        "name": "thumbnail_width"
      },
      {
        "type": "number",
        "name": "thumbnail_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultDocument": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageDocument, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "string",
        "name": "document_url"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "number",
        "name": "thumbnail_width"
      },
      {
        "type": "number",
        "name": "thumbnail_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultGame": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Message reply markup. Must be of type <a class=\"el\" href=\"classtd_1_1td__api_1_1reply_markup_inline_keyboard.html\">replyMarkupInlineKeyboard</a> or null."
      },
      {
        "type": "string",
        "name": "game_short_name"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultLocation": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "location",
        "name": "location"
      },
      {
        "type": "number",
        "name": "live_period"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "number",
        "name": "thumbnail_width"
      },
      {
        "type": "number",
        "name": "thumbnail_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultPhoto": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessagePhoto, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "string",
        "name": "photo_url"
      },
      {
        "type": "number",
        "name": "photo_width"
      },
      {
        "type": "number",
        "name": "photo_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultSticker": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, <a class=\"el\" href=\"classtd_1_1td__api_1_1input_message_sticker.html\">inputMessageSticker</a>, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "string",
        "name": "sticker_url"
      },
      {
        "type": "number",
        "name": "sticker_width"
      },
      {
        "type": "number",
        "name": "sticker_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultVenue": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "venue",
        "name": "venue"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "number",
        "name": "thumbnail_width"
      },
      {
        "type": "number",
        "name": "thumbnail_height"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultVideo": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageVideo, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "string",
        "name": "thumbnail_url"
      },
      {
        "type": "string",
        "name": "video_url"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "number",
        "name": "video_width"
      },
      {
        "type": "number",
        "name": "video_height"
      },
      {
        "type": "number",
        "name": "video_duration"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "inputInlineQueryResultVoiceNote": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "The content of the message to be sent. Must be one of the following types: InputMessageText, InputMessageVoiceNote, InputMessageLocation, InputMessageVenue or InputMessageContact."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "voice_note_url"
      },
      {
        "type": "number",
        "name": "voice_note_duration"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      },
      {
        "type": "InputMessageContent",
        "name": "input_message_content"
      }
    ],
    "extends": "InputInlineQueryResult",
    "type": "object"
  },
  "InputMessageContent": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "inputMessageAnimation": {
    "fields": [
      {
        "type": "InputFile",
        "name": "animation",
        "desc": "Animation caption; 0-200 characters."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageAudio": {
    "fields": [
      {
        "type": "InputFile",
        "name": "audio",
        "desc": "Audio caption; 0-200 characters."
      },
      {
        "type": "inputThumbnail",
        "name": "album_cover_thumbnail"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "performer"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageContact": {
    "fields": [
      {
        "type": "contact",
        "name": "contact",
        "desc": "Contact to send."
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageDocument": {
    "fields": [
      {
        "type": "InputFile",
        "name": "document",
        "desc": "Document caption; 0-200 characters."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageForwarded": {
    "fields": [
      {
        "type": "string",
        "name": "from_chat_id",
        "desc": "True, if a game message should be shared within a launched game; applies only to game messages."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "bool",
        "name": "in_game_share"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageGame": {
    "fields": [
      {
        "type": "number",
        "name": "bot_user_id",
        "desc": "Short name of the game."
      },
      {
        "type": "string",
        "name": "game_short_name"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageInvoice": {
    "fields": [
      {
        "type": "invoice",
        "name": "invoice",
        "desc": "Unique invoice bot start_parameter for the generation of this invoice."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "string",
        "name": "photo_url"
      },
      {
        "type": "number",
        "name": "photo_size"
      },
      {
        "type": "number",
        "name": "photo_width"
      },
      {
        "type": "number",
        "name": "photo_height"
      },
      {
        "type": "string",
        "name": "payload"
      },
      {
        "type": "string",
        "name": "provider_token"
      },
      {
        "type": "string",
        "name": "provider_data"
      },
      {
        "type": "string",
        "name": "start_parameter"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageLocation": {
    "fields": [
      {
        "type": "location",
        "name": "location",
        "desc": "Period for which the location can be updated, in seconds; should bebetween 60 and 86400 for a live location and 0 otherwise."
      },
      {
        "type": "number",
        "name": "live_period"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessagePhoto": {
    "fields": [
      {
        "type": "InputFile",
        "name": "photo",
        "desc": "Photo TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "number[]",
        "name": "added_sticker_file_ids"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "caption"
      },
      {
        "type": "number",
        "name": "ttl"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageSticker": {
    "fields": [
      {
        "type": "InputFile",
        "name": "sticker",
        "desc": "Sticker height."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageText": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Text parse mode; may be null. Can't be used in combination with enitities."
      },
      {
        "type": "bool",
        "name": "disable_web_page_preview"
      },
      {
        "type": "bool",
        "name": "clear_draft"
      },
      {
        "type": "textEntity[]",
        "name": "entities"
      },
      {
        "type": "TextParseMode",
        "name": "parse_mode"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageVenue": {
    "fields": [
      {
        "type": "venue",
        "name": "venue",
        "desc": "Venue to send."
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageVideo": {
    "fields": [
      {
        "type": "InputFile",
        "name": "video",
        "desc": "Video TTL (Time To Live), in seconds (0-60). A non-zero TTL can be specified only in private chats."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "number[]",
        "name": "added_sticker_file_ids"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "caption"
      },
      {
        "type": "number",
        "name": "ttl"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageVideoNote": {
    "fields": [
      {
        "type": "InputFile",
        "name": "video_note",
        "desc": "Video width and height; must be positive and not greater than 640."
      },
      {
        "type": "inputThumbnail",
        "name": "thumbnail"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "number",
        "name": "length"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputMessageVoiceNote": {
    "fields": [
      {
        "type": "InputFile",
        "name": "voice_note",
        "desc": "Voice note caption; 0-200 characters."
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "string",
        "name": "waveform"
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "InputMessageContent",
    "type": "object"
  },
  "inputSticker": {
    "fields": [
      {
        "type": "InputFile",
        "name": "png_sticker",
        "desc": "For masks, position where the mask should be placed; may be null."
      },
      {
        "type": "string",
        "name": "emojis"
      },
      {
        "type": "maskPosition",
        "name": "mask_position"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "keyboardButton": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Type of the button."
      },
      {
        "type": "KeyboardButtonType",
        "name": "type"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "inputThumbnail": {
    "fields": [
      {
        "type": "InputFile",
        "name": "thumbnail",
        "desc": "Thumbnail height, usually shouldn't exceed 90. Use 0 if unknown."
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "KeyboardButtonType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "invoice": {
    "fields": [
      {
        "type": "string",
        "name": "currency",
        "desc": "True, if the total price depends on the shipping method."
      },
      {
        "type": "labeledPricePart[]",
        "name": "price_parts"
      },
      {
        "type": "bool",
        "name": "is_test"
      },
      {
        "type": "bool",
        "name": "need_name"
      },
      {
        "type": "bool",
        "name": "need_phone_number"
      },
      {
        "type": "bool",
        "name": "need_email_address"
      },
      {
        "type": "bool",
        "name": "need_shipping_address"
      },
      {
        "type": "bool",
        "name": "send_phone_number_to_provider"
      },
      {
        "type": "bool",
        "name": "send_email_address_to_provider"
      },
      {
        "type": "bool",
        "name": "is_flexible"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "keyboardButtonTypeRequestLocation": {
    "fields": [],
    "extends": "KeyboardButtonType",
    "type": "object"
  },
  "keyboardButtonTypeRequestPhoneNumber": {
    "fields": [],
    "extends": "KeyboardButtonType",
    "type": "object"
  },
  "keyboardButtonTypeText": {
    "fields": [],
    "extends": "KeyboardButtonType",
    "type": "object"
  },
  "labeledPricePart": {
    "fields": [
      {
        "type": "string",
        "name": "label",
        "desc": "Currency amount in minimal quantity of the currency."
      },
      {
        "type": "string",
        "name": "amount"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "LinkState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "linkStateIsContact": {
    "fields": [],
    "extends": "LinkState",
    "type": "object"
  },
  "linkStateKnowsPhoneNumber": {
    "fields": [],
    "extends": "LinkState",
    "type": "object"
  },
  "linkStateNone": {
    "fields": [],
    "extends": "LinkState",
    "type": "object"
  },
  "localFile": {
    "fields": [
      {
        "type": "string",
        "name": "path",
        "desc": "Total downloaded file bytes. Should be used only for calculating download progress. The actual file size may be bigger, and some parts of it may contain garbage."
      },
      {
        "type": "bool",
        "name": "can_be_downloaded"
      },
      {
        "type": "bool",
        "name": "can_be_deleted"
      },
      {
        "type": "bool",
        "name": "is_downloading_active"
      },
      {
        "type": "bool",
        "name": "is_downloading_completed"
      },
      {
        "type": "number",
        "name": "downloaded_prefix_size"
      },
      {
        "type": "number",
        "name": "downloaded_size"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "location": {
    "fields": [
      {
        "type": "double",
        "name": "latitude",
        "desc": "Longitude of the location, in degrees; as defined by the sender."
      },
      {
        "type": "double",
        "name": "longitude"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "MaskPoint": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "maskPointChin": {
    "fields": [],
    "extends": "MaskPoint",
    "type": "object"
  },
  "maskPointEyes": {
    "fields": [],
    "extends": "MaskPoint",
    "type": "object"
  },
  "maskPointForehead": {
    "fields": [],
    "extends": "MaskPoint",
    "type": "object"
  },
  "maskPointMouth": {
    "fields": [],
    "extends": "MaskPoint",
    "type": "object"
  },
  "maskPosition": {
    "fields": [
      {
        "type": "MaskPoint",
        "name": "point",
        "desc": "Mask scaling coefficient. (For example, 2.0 means a doubled size.)"
      },
      {
        "type": "double",
        "name": "x_shift"
      },
      {
        "type": "double",
        "name": "y_shift"
      },
      {
        "type": "double",
        "name": "scale"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "message": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Reply markup for the message; may be null."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "chat_id"
      },
      {
        "type": "MessageSendingState",
        "name": "sending_state"
      },
      {
        "type": "bool",
        "name": "is_outgoing"
      },
      {
        "type": "bool",
        "name": "can_be_edited"
      },
      {
        "type": "bool",
        "name": "can_be_forwarded"
      },
      {
        "type": "bool",
        "name": "can_be_deleted_only_for_self"
      },
      {
        "type": "bool",
        "name": "can_be_deleted_for_all_users"
      },
      {
        "type": "bool",
        "name": "is_channel_post"
      },
      {
        "type": "bool",
        "name": "contains_unread_mention"
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "number",
        "name": "edit_date"
      },
      {
        "type": "MessageForwardInfo",
        "name": "forward_info"
      },
      {
        "type": "string",
        "name": "reply_to_message_id"
      },
      {
        "type": "number",
        "name": "ttl"
      },
      {
        "type": "double",
        "name": "ttl_expires_in"
      },
      {
        "type": "number",
        "name": "via_bot_user_id"
      },
      {
        "type": "string",
        "name": "author_signature"
      },
      {
        "type": "number",
        "name": "views"
      },
      {
        "type": "string",
        "name": "media_album_id"
      },
      {
        "type": "MessageContent",
        "name": "content"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "MessageContent": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "messageAnimation": {
    "fields": [
      {
        "type": "animation",
        "name": "animation",
        "desc": "Animation caption."
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageBasicGroupChatCreate": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "User identifiers of members in the basic group."
      },
      {
        "type": "number[]",
        "name": "member_user_ids"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatAddMembers": {
    "fields": [
      {
        "type": "number[]",
        "name": "member_user_ids",
        "desc": "User identifiers of the new members."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatChangePhoto": {
    "fields": [
      {
        "type": "photo",
        "name": "photo",
        "desc": "New chat photo."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatChangeTitle": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "New chat title."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatDeleteMember": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "User identifier of the deleted chat member."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatDeletePhoto": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatJoinByLink": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatSetTtl": {
    "fields": [
      {
        "type": "number",
        "name": "ttl",
        "desc": "New TTL."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatUpgradeFrom": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "The identifier of the original basic group."
      },
      {
        "type": "number",
        "name": "basic_group_id"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageChatUpgradeTo": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "Identifier of the supergroup to which the basic group was upgraded."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageContact": {
    "fields": [
      {
        "type": "contact",
        "name": "contact",
        "desc": "Message content."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageContactRegistered": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageCustomServiceAction": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Message text to be shown in the chat."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageDocument": {
    "fields": [
      {
        "type": "document",
        "name": "document",
        "desc": "Document caption."
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageExpiredPhoto": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageExpiredVideo": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageGame": {
    "fields": [
      {
        "type": "game",
        "name": "game",
        "desc": "Game."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageGameScore": {
    "fields": [
      {
        "type": "string",
        "name": "game_message_id",
        "desc": "New score."
      },
      {
        "type": "string",
        "name": "game_id"
      },
      {
        "type": "number",
        "name": "score"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageInvoice": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "The identifier of the message with the receipt, after the product has been purchased."
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "photo",
        "name": "photo"
      },
      {
        "type": "string",
        "name": "currency"
      },
      {
        "type": "string",
        "name": "total_amount"
      },
      {
        "type": "string",
        "name": "start_parameter"
      },
      {
        "type": "bool",
        "name": "is_test"
      },
      {
        "type": "bool",
        "name": "need_shipping_address"
      },
      {
        "type": "string",
        "name": "receipt_message_id"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageLocation": {
    "fields": [
      {
        "type": "location",
        "name": "location",
        "desc": "Time relative to the message sent date until which the location can be updated, in seconds."
      },
      {
        "type": "number",
        "name": "live_period"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messagePaymentSuccessful": {
    "fields": [
      {
        "type": "string",
        "name": "invoice_message_id",
        "desc": "Total price for the product, in the minimal quantity of the currency."
      },
      {
        "type": "string",
        "name": "currency"
      },
      {
        "type": "string",
        "name": "total_amount"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messagePaymentSuccessfulBot": {
    "fields": [
      {
        "type": "string",
        "name": "invoice_message_id",
        "desc": "Provider payment identifier."
      },
      {
        "type": "string",
        "name": "currency"
      },
      {
        "type": "string",
        "name": "total_amount"
      },
      {
        "type": "string",
        "name": "invoice_payload"
      },
      {
        "type": "string",
        "name": "shipping_option_id"
      },
      {
        "type": "orderInfo",
        "name": "order_info"
      },
      {
        "type": "string",
        "name": "telegram_payment_charge_id"
      },
      {
        "type": "string",
        "name": "provider_payment_charge_id"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messagePhoto": {
    "fields": [
      {
        "type": "photo",
        "name": "photo",
        "desc": "Photo caption."
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messagePinMessage": {
    "fields": [
      {
        "type": "string",
        "name": "message_id",
        "desc": "Identifier of the pinned message, can be an identifier of a deleted message."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageScreenshotTaken": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageSticker": {
    "fields": [
      {
        "type": "sticker",
        "name": "sticker",
        "desc": "Message content."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageSupergroupChatCreate": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "Title of the supergroup or channel."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageAudio": {
    "fields": [
      {
        "type": "audio",
        "name": "audio",
        "desc": "Audio caption."
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageCall": {
    "fields": [
      {
        "type": "CallDiscardReason",
        "name": "discard_reason",
        "desc": "Call duration, in seconds."
      },
      {
        "type": "number",
        "name": "duration"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageText": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "A preview of the web page that's mentioned in the text; may be null."
      },
      {
        "type": "textEntity[]",
        "name": "entities"
      },
      {
        "type": "webPage",
        "name": "web_page"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageVideoNote": {
    "fields": [
      {
        "type": "videoNote",
        "name": "video_note",
        "desc": "True, if at least one of the recipients has viewed the video note."
      },
      {
        "type": "bool",
        "name": "is_viewed"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageVideo": {
    "fields": [
      {
        "type": "video",
        "name": "video",
        "desc": "Video caption."
      },
      {
        "type": "string",
        "name": "caption"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageVoiceNote": {
    "fields": [
      {
        "type": "voiceNote",
        "name": "voice_note",
        "desc": "True, if at least one of the recipients has listened to the voice note."
      },
      {
        "type": "string",
        "name": "caption"
      },
      {
        "type": "bool",
        "name": "is_listened"
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "MessageForwardInfo": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "messageForwardedFromUser": {
    "fields": [
      {
        "type": "number",
        "name": "sender_user_id",
        "desc": "For messages forwarded to the chat with the current user (saved messages) the identifier of the original message from which the new message was forwarded; 0 if unknown."
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "string",
        "name": "forwarded_from_chat_id"
      },
      {
        "type": "string",
        "name": "forwarded_from_message_id"
      }
    ],
    "extends": "MessageForwardInfo",
    "type": "object"
  },
  "messageForwardedPost": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "For messages forwarded to the chat with the current user (saved messages), the identifier of the original message from which the new message was forwarded; 0 if unknown."
      },
      {
        "type": "string",
        "name": "author_signature"
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "string",
        "name": "forwarded_from_chat_id"
      },
      {
        "type": "string",
        "name": "forwarded_from_message_id"
      }
    ],
    "extends": "MessageForwardInfo",
    "type": "object"
  },
  "messages": {
    "fields": [
      {
        "type": "number",
        "name": "total_count",
        "desc": "List of messages; messages may be null."
      },
      {
        "type": "message[]",
        "name": "messages"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "MessageSendingState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "messageSendingStateFailed": {
    "fields": [],
    "extends": "MessageSendingState",
    "type": "object"
  },
  "messageSendingStatePending": {
    "fields": [],
    "extends": "MessageSendingState",
    "type": "object"
  },
  "networkStatistics": {
    "fields": [
      {
        "type": "number",
        "name": "since_date",
        "desc": "Network statistics entries."
      },
      {
        "type": "NetworkStatisticsEntry[]",
        "name": "entries"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "NetworkStatisticsEntry": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "networkStatisticsEntryCall": {
    "fields": [
      {
        "type": "NetworkType",
        "name": "network_type",
        "desc": "Total call duration, in seconds."
      },
      {
        "type": "string",
        "name": "sent_bytes"
      },
      {
        "type": "string",
        "name": "received_bytes"
      },
      {
        "type": "double",
        "name": "duration"
      }
    ],
    "extends": "NetworkStatisticsEntry",
    "type": "object"
  },
  "networkStatisticsEntryFile": {
    "fields": [
      {
        "type": "FileType",
        "name": "file_type",
        "desc": "Total number of bytes received."
      },
      {
        "type": "NetworkType",
        "name": "network_type"
      },
      {
        "type": "string",
        "name": "sent_bytes"
      },
      {
        "type": "string",
        "name": "received_bytes"
      }
    ],
    "extends": "NetworkStatisticsEntry",
    "type": "object"
  },
  "NetworkType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "networkTypeMobile": {
    "fields": [],
    "extends": "NetworkType",
    "type": "object"
  },
  "networkTypeMobileRoaming": {
    "fields": [],
    "extends": "NetworkType",
    "type": "object"
  },
  "networkTypeNone": {
    "fields": [],
    "extends": "NetworkType",
    "type": "object"
  },
  "networkTypeOther": {
    "fields": [],
    "extends": "NetworkType",
    "type": "object"
  },
  "networkTypeWiFi": {
    "fields": [],
    "extends": "NetworkType",
    "type": "object"
  },
  "notificationSettings": {
    "fields": [
      {
        "type": "number",
        "name": "mute_for",
        "desc": "True, if message content should be displayed in notifications."
      },
      {
        "type": "string",
        "name": "sound"
      },
      {
        "type": "bool",
        "name": "show_preview"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "NotificationSettingsScope": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "notificationSettingsScopeAllChats": {
    "fields": [],
    "extends": "NotificationSettingsScope",
    "type": "object"
  },
  "notificationSettingsScopeBasicGroupChats": {
    "fields": [],
    "extends": "NotificationSettingsScope",
    "type": "object"
  },
  "notificationSettingsScopeChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Chat identifier."
      }
    ],
    "extends": "NotificationSettingsScope",
    "type": "object"
  },
  "notificationSettingsScopePrivateChats": {
    "fields": [],
    "extends": "NotificationSettingsScope",
    "type": "object"
  },
  "ok": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "OptionValue": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "optionValueBoolean": {
    "fields": [
      {
        "type": "bool",
        "name": "value",
        "desc": "The value of the option."
      }
    ],
    "extends": "OptionValue",
    "type": "object"
  },
  "optionValueEmpty": {
    "fields": [],
    "extends": "OptionValue",
    "type": "object"
  },
  "optionValueInteger": {
    "fields": [
      {
        "type": "number",
        "name": "value",
        "desc": "The value of the option."
      }
    ],
    "extends": "OptionValue",
    "type": "object"
  },
  "optionValueString": {
    "fields": [
      {
        "type": "string",
        "name": "value",
        "desc": "The value of the option."
      }
    ],
    "extends": "OptionValue",
    "type": "object"
  },
  "orderInfo": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "Shipping address for this order; may be null."
      },
      {
        "type": "string",
        "name": "phone_number"
      },
      {
        "type": "string",
        "name": "email_address"
      },
      {
        "type": "shippingAddress",
        "name": "shipping_address"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "PageBlock": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "pageBlockAnchor": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "Name of the anchor."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockAnimation": {
    "fields": [
      {
        "type": "animation",
        "name": "animation",
        "desc": "True, if the animation should be played automatically."
      },
      {
        "type": "RichText",
        "name": "caption"
      },
      {
        "type": "bool",
        "name": "need_autoplay"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockAudio": {
    "fields": [
      {
        "type": "audio",
        "name": "audio",
        "desc": "Audio file caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockAuthorDate": {
    "fields": [
      {
        "type": "RichText",
        "name": "author",
        "desc": "Point in time (Unix timestamp) when the article was published; 0 if unknown."
      },
      {
        "type": "number",
        "name": "publish_date"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockBlockQuote": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Quote caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockChatLink": {
    "fields": [
      {
        "type": "string",
        "name": "title",
        "desc": "Chat username, by which all other information about the chat should be resolved."
      },
      {
        "type": "chatPhoto",
        "name": "photo"
      },
      {
        "type": "string",
        "name": "username"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockCollage": {
    "fields": [
      {
        "type": "PageBlock[]",
        "name": "page_blocks",
        "desc": "Block caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockCover": {
    "fields": [
      {
        "type": "PageBlock",
        "name": "cover",
        "desc": "Cover."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockEmbedded": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "True, if scrolling should be allowed."
      },
      {
        "type": "string",
        "name": "html"
      },
      {
        "type": "photo",
        "name": "poster_photo"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "RichText",
        "name": "caption"
      },
      {
        "type": "bool",
        "name": "is_full_width"
      },
      {
        "type": "bool",
        "name": "allow_scrolling"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockDivider": {
    "fields": [],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockEmbeddedPost": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "Post caption."
      },
      {
        "type": "string",
        "name": "author"
      },
      {
        "type": "photo",
        "name": "author_photo"
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "PageBlock[]",
        "name": "page_blocks"
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockFooter": {
    "fields": [
      {
        "type": "RichText",
        "name": "footer",
        "desc": "Footer."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockHeader": {
    "fields": [
      {
        "type": "RichText",
        "name": "header",
        "desc": "Header."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockList": {
    "fields": [
      {
        "type": "RichText[]",
        "name": "items",
        "desc": "True, if the items should be marked with numbers."
      },
      {
        "type": "bool",
        "name": "is_ordered"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockParagraph": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Paragraph text."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockPhoto": {
    "fields": [
      {
        "type": "photo",
        "name": "photo",
        "desc": "Photo caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockPreformatted": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Programming language for which the text should be formatted."
      },
      {
        "type": "string",
        "name": "language"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockPullQuote": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Quote caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockSlideshow": {
    "fields": [
      {
        "type": "PageBlock[]",
        "name": "page_blocks",
        "desc": "Block caption."
      },
      {
        "type": "RichText",
        "name": "caption"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockSubheader": {
    "fields": [
      {
        "type": "RichText",
        "name": "subheader",
        "desc": "Subheader."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockSubtitle": {
    "fields": [
      {
        "type": "RichText",
        "name": "subtitle",
        "desc": "Subtitle."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockTitle": {
    "fields": [
      {
        "type": "RichText",
        "name": "title",
        "desc": "Title."
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "pageBlockVideo": {
    "fields": [
      {
        "type": "video",
        "name": "video",
        "desc": "True, if the video should be looped."
      },
      {
        "type": "RichText",
        "name": "caption"
      },
      {
        "type": "bool",
        "name": "need_autoplay"
      },
      {
        "type": "bool",
        "name": "is_looped"
      }
    ],
    "extends": "PageBlock",
    "type": "object"
  },
  "passwordRecoveryInfo": {
    "fields": [
      {
        "type": "string",
        "name": "recovery_email_address_pattern",
        "desc": "Pattern of the email address to which a recovery email was sent."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "passwordState": {
    "fields": [
      {
        "type": "bool",
        "name": "has_password",
        "desc": "Pattern of the email address to which a confirmation email was sent."
      },
      {
        "type": "string",
        "name": "password_hint"
      },
      {
        "type": "bool",
        "name": "has_recovery_email_address"
      },
      {
        "type": "string",
        "name": "unconfirmed_recovery_email_address_pattern"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "paymentForm": {
    "fields": [
      {
        "type": "invoice",
        "name": "invoice",
        "desc": "True, if the user will be able to save credentials protected by a password they set up."
      },
      {
        "type": "string",
        "name": "url"
      },
      {
        "type": "paymentsProviderStripe",
        "name": "payments_provider"
      },
      {
        "type": "orderInfo",
        "name": "saved_order_info"
      },
      {
        "type": "savedCredentials",
        "name": "saved_credentials"
      },
      {
        "type": "bool",
        "name": "can_save_credentials"
      },
      {
        "type": "bool",
        "name": "need_password"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "paymentReceipt": {
    "fields": [
      {
        "type": "number",
        "name": "date",
        "desc": "Title of the saved credentials."
      },
      {
        "type": "number",
        "name": "payments_provider_user_id"
      },
      {
        "type": "invoice",
        "name": "invoice"
      },
      {
        "type": "orderInfo",
        "name": "order_info"
      },
      {
        "type": "shippingOption",
        "name": "shipping_option"
      },
      {
        "type": "string",
        "name": "credentials_title"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "paymentResult": {
    "fields": [
      {
        "type": "bool",
        "name": "success",
        "desc": "URL for additional payment credentials verification."
      },
      {
        "type": "string",
        "name": "verification_url"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "paymentsProviderStripe": {
    "fields": [
      {
        "type": "string",
        "name": "publishable_key",
        "desc": "True, if the cardholder name must be provided."
      },
      {
        "type": "bool",
        "name": "need_country"
      },
      {
        "type": "bool",
        "name": "need_postal_code"
      },
      {
        "type": "bool",
        "name": "need_cardholder_name"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "photo": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Available variants of the photo, in different sizes."
      },
      {
        "type": "bool",
        "name": "has_stickers"
      },
      {
        "type": "photoSize[]",
        "name": "sizes"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "photoSize": {
    "fields": [
      {
        "type": "string",
        "name": "type",
        "desc": "Photo height."
      },
      {
        "type": "file",
        "name": "photo"
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "profilePhoto": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "A big (640x640) user profile photo."
      },
      {
        "type": "file",
        "name": "small"
      },
      {
        "type": "file",
        "name": "big"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "Proxy": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "proxyEmpty": {
    "fields": [],
    "extends": "Proxy",
    "type": "object"
  },
  "proxySocks5": {
    "fields": [
      {
        "type": "string",
        "name": "server",
        "desc": "Password for logging in."
      },
      {
        "type": "number",
        "name": "port"
      },
      {
        "type": "string",
        "name": "username"
      },
      {
        "type": "string",
        "name": "password"
      }
    ],
    "extends": "Proxy",
    "type": "object"
  },
  "publicMessageLink": {
    "fields": [
      {
        "type": "string",
        "name": "link",
        "desc": "Message link."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "recoveryEmailAddress": {
    "fields": [
      {
        "type": "string",
        "name": "recovery_email_address",
        "desc": "Recovery email address."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "remoteFile": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Size of the remote available part of the file; 0 if unknown."
      },
      {
        "type": "bool",
        "name": "is_uploading_active"
      },
      {
        "type": "bool",
        "name": "is_uploading_completed"
      },
      {
        "type": "number",
        "name": "uploaded_size"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "ReplyMarkup": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "replyMarkupForceReply": {
    "fields": [
      {
        "type": "bool",
        "name": "is_personal",
        "desc": "True, if a forced reply must automatically be shown to the current user. For outgoing messages, specify true to show the forced reply only for the mentioned users and for the target user of a reply."
      }
    ],
    "extends": "ReplyMarkup",
    "type": "object"
  },
  "replyMarkupInlineKeyboard": {
    "fields": [
      {
        "type": "inlineKeyboardButton[][]",
        "name": "rows",
        "desc": "A list of rows of inline keyboard buttons."
      }
    ],
    "extends": "ReplyMarkup",
    "type": "object"
  },
  "replyMarkupRemoveKeyboard": {
    "fields": [
      {
        "type": "bool",
        "name": "is_personal",
        "desc": "True, if the keyboard is removed only for the mentioned users or the target user of a reply."
      }
    ],
    "extends": "ReplyMarkup",
    "type": "object"
  },
  "RichText": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "messageUnsupported": {
    "fields": [],
    "extends": "MessageContent",
    "type": "object"
  },
  "messageVenue": {
    "fields": [
      {
        "type": "venue",
        "name": "venue",
        "desc": "Message content."
      }
    ],
    "extends": "MessageContent",
    "type": "object"
  },
  "replyMarkupShowKeyboard": {
    "fields": [
      {
        "type": "keyboardButton[][]",
        "name": "rows",
        "desc": "True, if the keyboard must automatically be shown to the current user. For outgoing messages, specify true to show the keyboard only for the mentioned users and for the target user of a reply."
      },
      {
        "type": "bool",
        "name": "resize_keyboard"
      },
      {
        "type": "bool",
        "name": "one_time"
      },
      {
        "type": "bool",
        "name": "is_personal"
      }
    ],
    "extends": "ReplyMarkup",
    "type": "object"
  },
  "richTextItalic": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextPlain": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextFixed": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTexts": {
    "fields": [
      {
        "type": "RichText[]",
        "name": "texts",
        "desc": "Texts."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextStrikethrough": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextBold": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextEmailAddress": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Email address."
      },
      {
        "type": "string",
        "name": "email_address"
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextUnderline": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "richTextUrl": {
    "fields": [
      {
        "type": "RichText",
        "name": "text",
        "desc": "URL."
      },
      {
        "type": "string",
        "name": "url"
      }
    ],
    "extends": "RichText",
    "type": "object"
  },
  "SearchMessagesFilter": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "savedCredentials": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Title of the saved credentials."
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "searchMessagesFilterAudio": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterAnimation": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterCall": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterChatPhoto": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterDocument": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterEmpty": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterMention": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterMissedCall": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterPhoto": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterPhotoAndVideo": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterUnreadMention": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterUrl": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterVideo": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterVideoNote": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterVoiceAndVideoNote": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "searchMessagesFilterVoiceNote": {
    "fields": [],
    "extends": "SearchMessagesFilter",
    "type": "object"
  },
  "secretChat": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Secret chat layer; determines features supported by the other client. Video notes are supported if the layer >= 66."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "SecretChatState",
        "name": "state"
      },
      {
        "type": "bool",
        "name": "is_outbound"
      },
      {
        "type": "number",
        "name": "ttl"
      },
      {
        "type": "string",
        "name": "key_hash"
      },
      {
        "type": "number",
        "name": "layer"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "SecretChatState": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "secretChatStateClosed": {
    "fields": [],
    "extends": "SecretChatState",
    "type": "object"
  },
  "secretChatStatePending": {
    "fields": [],
    "extends": "SecretChatState",
    "type": "object"
  },
  "secretChatStateReady": {
    "fields": [],
    "extends": "SecretChatState",
    "type": "object"
  },
  "session": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Region code from which the session was created, based on the IP address."
      },
      {
        "type": "bool",
        "name": "is_current"
      },
      {
        "type": "number",
        "name": "api_id"
      },
      {
        "type": "string",
        "name": "application_name"
      },
      {
        "type": "string",
        "name": "application_version"
      },
      {
        "type": "bool",
        "name": "is_official_application"
      },
      {
        "type": "string",
        "name": "device_model"
      },
      {
        "type": "string",
        "name": "platform"
      },
      {
        "type": "string",
        "name": "system_version"
      },
      {
        "type": "number",
        "name": "log_in_date"
      },
      {
        "type": "number",
        "name": "last_active_date"
      },
      {
        "type": "string",
        "name": "ip"
      },
      {
        "type": "string",
        "name": "country"
      },
      {
        "type": "string",
        "name": "region"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "sessions": {
    "fields": [
      {
        "type": "session[]",
        "name": "sessions",
        "desc": "List of sessions."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "shippingAddress": {
    "fields": [
      {
        "type": "string",
        "name": "country_code",
        "desc": "Address postal code."
      },
      {
        "type": "string",
        "name": "state"
      },
      {
        "type": "string",
        "name": "city"
      },
      {
        "type": "string",
        "name": "street_line1"
      },
      {
        "type": "string",
        "name": "street_line2"
      },
      {
        "type": "string",
        "name": "postal_code"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "shippingOption": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "A list of objects used to calculate the total shipping costs."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "labeledPricePart[]",
        "name": "price_parts"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "sticker": {
    "fields": [
      {
        "type": "string",
        "name": "set_id",
        "desc": "File containing the sticker."
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "emoji"
      },
      {
        "type": "bool",
        "name": "is_mask"
      },
      {
        "type": "maskPosition",
        "name": "mask_position"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      },
      {
        "type": "file",
        "name": "sticker"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "stickerEmojis": {
    "fields": [
      {
        "type": "string[]",
        "name": "emojis",
        "desc": "List of emojis."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "stickers": {
    "fields": [
      {
        "type": "sticker[]",
        "name": "stickers",
        "desc": "List of stickers."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "stickerSet": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "A list of emoji corresponding to the stickers in the same order."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "name"
      },
      {
        "type": "bool",
        "name": "is_installed"
      },
      {
        "type": "bool",
        "name": "is_archived"
      },
      {
        "type": "bool",
        "name": "is_official"
      },
      {
        "type": "bool",
        "name": "is_masks"
      },
      {
        "type": "bool",
        "name": "is_viewed"
      },
      {
        "type": "sticker[]",
        "name": "stickers"
      },
      {
        "type": "stickerEmojis[]",
        "name": "emojis"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "stickerSetInfo": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Contains up to the first 5 stickers from the set, depending on the context. If the client needs more stickers the full set should be requested."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "name"
      },
      {
        "type": "bool",
        "name": "is_installed"
      },
      {
        "type": "bool",
        "name": "is_archived"
      },
      {
        "type": "bool",
        "name": "is_official"
      },
      {
        "type": "bool",
        "name": "is_masks"
      },
      {
        "type": "bool",
        "name": "is_viewed"
      },
      {
        "type": "number",
        "name": "size"
      },
      {
        "type": "sticker[]",
        "name": "covers"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "storageStatisticsByFileType": {
    "fields": [
      {
        "type": "FileType",
        "name": "file_type",
        "desc": "Total number of files."
      },
      {
        "type": "string",
        "name": "size"
      },
      {
        "type": "number",
        "name": "count"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "stickerSets": {
    "fields": [
      {
        "type": "number",
        "name": "total_count",
        "desc": "List of sticker sets."
      },
      {
        "type": "stickerSetInfo[]",
        "name": "sets"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "storageStatisticsByChat": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Statistics split by file types."
      },
      {
        "type": "string",
        "name": "size"
      },
      {
        "type": "number",
        "name": "count"
      },
      {
        "type": "storageStatisticsByFileType[]",
        "name": "by_file_type"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "supergroup": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "If non-empty, contains the reason why access to this supergroup or channel must be restricted. Format of the string is \"{type}: {description}\". {type} Contains the type of the restriction and at least one of the suffixes \"-all\", \"-ios\", \"-android\", or \"-wp\", which describe the platforms on which access should be restricted. (For example, \"terms-ios-android\". {description} contains a human-readable description of the restriction, which can be shown to the user.)"
      },
      {
        "type": "string",
        "name": "username"
      },
      {
        "type": "number",
        "name": "date"
      },
      {
        "type": "ChatMemberStatus",
        "name": "status"
      },
      {
        "type": "number",
        "name": "member_count"
      },
      {
        "type": "bool",
        "name": "anyone_can_invite"
      },
      {
        "type": "bool",
        "name": "sign_messages"
      },
      {
        "type": "bool",
        "name": "is_channel"
      },
      {
        "type": "bool",
        "name": "is_verified"
      },
      {
        "type": "string",
        "name": "restriction_reason"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "supergroupFullInfo": {
    "fields": [
      {
        "type": "string",
        "name": "description",
        "desc": "Identifier of the last message in the basic group from which supergroup was upgraded; 0 if none."
      },
      {
        "type": "number",
        "name": "member_count"
      },
      {
        "type": "number",
        "name": "administrator_count"
      },
      {
        "type": "number",
        "name": "restricted_count"
      },
      {
        "type": "number",
        "name": "banned_count"
      },
      {
        "type": "bool",
        "name": "can_get_members"
      },
      {
        "type": "bool",
        "name": "can_set_username"
      },
      {
        "type": "bool",
        "name": "can_set_sticker_set"
      },
      {
        "type": "bool",
        "name": "is_all_history_available"
      },
      {
        "type": "string",
        "name": "sticker_set_id"
      },
      {
        "type": "string",
        "name": "invite_link"
      },
      {
        "type": "string",
        "name": "pinned_message_id"
      },
      {
        "type": "number",
        "name": "upgraded_from_basic_group_id"
      },
      {
        "type": "string",
        "name": "upgraded_from_max_message_id"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "SupergroupMembersFilter": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "supergroupMembersFilterAdministrators": {
    "fields": [],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "supergroupMembersFilterBanned": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Query to search for."
      }
    ],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "supergroupMembersFilterBots": {
    "fields": [],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "supergroupMembersFilterRecent": {
    "fields": [],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "supergroupMembersFilterRestricted": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Query to search for."
      }
    ],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "supergroupMembersFilterSearch": {
    "fields": [
      {
        "type": "string",
        "name": "query",
        "desc": "Query to search for."
      }
    ],
    "extends": "SupergroupMembersFilter",
    "type": "object"
  },
  "temporaryPasswordState": {
    "fields": [
      {
        "type": "bool",
        "name": "has_password",
        "desc": "Time left before the temporary password expires, in seconds."
      },
      {
        "type": "number",
        "name": "valid_for"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "tdlibParameters": {
    "fields": [
      {
        "type": "bool",
        "name": "use_test_dc",
        "desc": "If set to true, original file names will be ignored. Otherwise, downloaded files will be saved under names as close as possible to the original name."
      },
      {
        "type": "string",
        "name": "database_directory"
      },
      {
        "type": "string",
        "name": "files_directory"
      },
      {
        "type": "bool",
        "name": "use_file_database"
      },
      {
        "type": "bool",
        "name": "use_chat_info_database"
      },
      {
        "type": "bool",
        "name": "use_message_database"
      },
      {
        "type": "bool",
        "name": "use_secret_chats"
      },
      {
        "type": "number",
        "name": "api_id"
      },
      {
        "type": "string",
        "name": "api_hash"
      },
      {
        "type": "string",
        "name": "system_language_code"
      },
      {
        "type": "string",
        "name": "device_model"
      },
      {
        "type": "string",
        "name": "system_version"
      },
      {
        "type": "string",
        "name": "application_version"
      },
      {
        "type": "bool",
        "name": "enable_storage_optimizer"
      },
      {
        "type": "bool",
        "name": "ignore_file_names"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testBytes": {
    "fields": [
      {
        "type": "string",
        "name": "value",
        "desc": "Bytes."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testInt": {
    "fields": [
      {
        "type": "number",
        "name": "value",
        "desc": "Number."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testString": {
    "fields": [
      {
        "type": "string",
        "name": "value",
        "desc": "String."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testVectorIntObject": {
    "fields": [
      {
        "type": "testInt[]",
        "name": "value",
        "desc": "Vector of objects."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testVectorInt": {
    "fields": [
      {
        "type": "number[]",
        "name": "value",
        "desc": "Vector of numbers."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testVectorString": {
    "fields": [
      {
        "type": "string[]",
        "name": "value",
        "desc": "Vector of strings."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "testVectorStringObject": {
    "fields": [
      {
        "type": "testString[]",
        "name": "value",
        "desc": "Vector of objects."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "text": {
    "fields": [
      {
        "type": "string",
        "name": "text",
        "desc": "Text."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "textEntities": {
    "fields": [
      {
        "type": "textEntity[]",
        "name": "entities",
        "desc": "List of text entities."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "textEntity": {
    "fields": [
      {
        "type": "number",
        "name": "offset",
        "desc": "Type of the entity."
      },
      {
        "type": "number",
        "name": "length"
      },
      {
        "type": "TextEntityType",
        "name": "type"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "TextEntityType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "textEntityTypeBold": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeBotCommand": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeCode": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeEmailAddress": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeHashtag": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeItalic": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeMention": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeMentionName": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Identifier of the mentioned user."
      }
    ],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypePre": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypePreCode": {
    "fields": [
      {
        "type": "string",
        "name": "language",
        "desc": "Programming language of the code; as defined by the sender."
      }
    ],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeTextUrl": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "URL to be opened when the link is clicked."
      }
    ],
    "extends": "TextEntityType",
    "type": "object"
  },
  "textEntityTypeUrl": {
    "fields": [],
    "extends": "TextEntityType",
    "type": "object"
  },
  "TextParseMode": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "textParseModeHTML": {
    "fields": [],
    "extends": "TextParseMode",
    "type": "object"
  },
  "textParseModeMarkdown": {
    "fields": [],
    "extends": "TextParseMode",
    "type": "object"
  },
  "tMeUrl": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "Type of the URL."
      },
      {
        "type": "TMeUrlType",
        "name": "type"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "tMeUrls": {
    "fields": [
      {
        "type": "tMeUrl[]",
        "name": "urls",
        "desc": "List of URLs."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "TMeUrlType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "tMeUrlTypeChatInvite": {
    "fields": [
      {
        "type": "chatInviteLinkInfo",
        "name": "info",
        "desc": "Chat invite link info."
      }
    ],
    "extends": "TMeUrlType",
    "type": "object"
  },
  "tMeUrlTypeStickerSet": {
    "fields": [
      {
        "type": "string",
        "name": "sticker_set_id",
        "desc": "Identifier of the sticker set."
      }
    ],
    "extends": "TMeUrlType",
    "type": "object"
  },
  "tMeUrlTypeSupergroup": {
    "fields": [
      {
        "type": "string",
        "name": "supergroup_id",
        "desc": "Identifier of the supergroup or channel."
      }
    ],
    "extends": "TMeUrlType",
    "type": "object"
  },
  "tMeUrlTypeUser": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "Identifier of the user."
      }
    ],
    "extends": "TMeUrlType",
    "type": "object"
  },
  "TopChatCategory": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "topChatCategoryBots": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "topChatCategoryCalls": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "topChatCategoryChannels": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "topChatCategoryGroups": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "topChatCategoryInlineBots": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "topChatCategoryUsers": {
    "fields": [],
    "extends": "TopChatCategory",
    "type": "object"
  },
  "Update": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "updateAuthorizationState": {
    "fields": [
      {
        "type": "AuthorizationState",
        "name": "authorization_state",
        "desc": "New authorization state."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateBasicGroup": {
    "fields": [
      {
        "type": "basicGroup",
        "name": "basic_group",
        "desc": "New data about the group."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateBasicGroupFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "basic_group_id",
        "desc": "New full information about the group."
      },
      {
        "type": "basicGroupFullInfo",
        "name": "basic_group_full_info"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateCall": {
    "fields": [
      {
        "type": "call",
        "name": "call",
        "desc": "New data about a call."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatDraftMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of the chat order."
      },
      {
        "type": "draftMessage",
        "name": "draft_message"
      },
      {
        "type": "string",
        "name": "order"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatIsPinned": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of the chat order."
      },
      {
        "type": "bool",
        "name": "is_pinned"
      },
      {
        "type": "string",
        "name": "order"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatLastMessage": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of the chat order."
      },
      {
        "type": "message",
        "name": "last_message"
      },
      {
        "type": "string",
        "name": "order"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatOrder": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of the order."
      },
      {
        "type": "string",
        "name": "order"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatPhoto": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The new chat photo; may be null."
      },
      {
        "type": "chatPhoto",
        "name": "photo"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatReadInbox": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The number of unread messages left in the chat."
      },
      {
        "type": "string",
        "name": "last_read_inbox_message_id"
      },
      {
        "type": "number",
        "name": "unread_count"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatReadOutbox": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of last read outgoing message."
      },
      {
        "type": "string",
        "name": "last_read_outbox_message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatReplyMarkup": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Identifier of the message from which reply markup needs to be used; 0 if there is no default custom reply markup in the chat."
      },
      {
        "type": "string",
        "name": "reply_markup_message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatTitle": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The new chat title."
      },
      {
        "type": "string",
        "name": "title"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateChatUnreadMentionCount": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The number of unread mention messages left in the chat."
      },
      {
        "type": "number",
        "name": "unread_mention_count"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateConnectionState": {
    "fields": [
      {
        "type": "ConnectionState",
        "name": "state",
        "desc": "The new connection state."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateDeleteMessages": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "True, if the messages are deleted only from the cache and can possibly be retrieved again in the future."
      },
      {
        "type": "string[]",
        "name": "message_ids"
      },
      {
        "type": "bool",
        "name": "is_permanent"
      },
      {
        "type": "bool",
        "name": "from_cache"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateFavoriteStickers": {
    "fields": [
      {
        "type": "number[]",
        "name": "sticker_ids",
        "desc": "The new list of file identifiers of favorite stickers."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateFile": {
    "fields": [
      {
        "type": "file",
        "name": "file",
        "desc": "New data about the file."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateFileGenerationStart": {
    "fields": [
      {
        "type": "string",
        "name": "generation_id",
        "desc": "String specifying the conversion applied to the original file."
      },
      {
        "type": "string",
        "name": "original_path"
      },
      {
        "type": "string",
        "name": "destination_path"
      },
      {
        "type": "string",
        "name": "conversion"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateFileGenerationStop": {
    "fields": [
      {
        "type": "string",
        "name": "generation_id",
        "desc": "Unique identifier for the generation process."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateInstalledStickerSets": {
    "fields": [
      {
        "type": "bool",
        "name": "is_masks",
        "desc": "The new list of installed ordinary sticker sets."
      },
      {
        "type": "string[]",
        "name": "sticker_set_ids"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageContent": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New message content."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "MessageContent",
        "name": "new_content"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageContentOpened": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "Message identifier."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageEdited": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New message reply markup; may be null."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "number",
        "name": "edit_date"
      },
      {
        "type": "ReplyMarkup",
        "name": "reply_markup"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageMentionRead": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The new number of unread mention messages left in the chat."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "number",
        "name": "unread_mention_count"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageSendAcknowledged": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "A temporary message identifier."
      },
      {
        "type": "string",
        "name": "message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "storageStatistics": {
    "fields": [
      {
        "type": "string",
        "name": "size",
        "desc": "Statistics split by chats."
      },
      {
        "type": "number",
        "name": "count"
      },
      {
        "type": "storageStatisticsByChat[]",
        "name": "by_chat"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "updateMessageSendFailed": {
    "fields": [
      {
        "type": "message",
        "name": "message",
        "desc": "Error message."
      },
      {
        "type": "string",
        "name": "old_message_id"
      },
      {
        "type": "number",
        "name": "error_code"
      },
      {
        "type": "string",
        "name": "error_message"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageSendSucceeded": {
    "fields": [
      {
        "type": "message",
        "name": "message",
        "desc": "The previous temporary message identifier."
      },
      {
        "type": "string",
        "name": "old_message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewCallbackQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Query payload."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "chat_id"
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "string",
        "name": "chat_instance"
      },
      {
        "type": "CallbackQueryPayload",
        "name": "payload"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewChat": {
    "fields": [
      {
        "type": "chat",
        "name": "chat",
        "desc": "The chat."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewChosenInlineResult": {
    "fields": [
      {
        "type": "number",
        "name": "sender_user_id",
        "desc": "Identifier of the sent inline message, if known."
      },
      {
        "type": "location",
        "name": "user_location"
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "string",
        "name": "result_id"
      },
      {
        "type": "string",
        "name": "inline_message_id"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewCustomEvent": {
    "fields": [
      {
        "type": "string",
        "name": "event",
        "desc": "A JSON-serialized event."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewCustomQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Query timeout."
      },
      {
        "type": "string",
        "name": "data"
      },
      {
        "type": "number",
        "name": "timeout"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateMessageViews": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "New value of the view count."
      },
      {
        "type": "string",
        "name": "message_id"
      },
      {
        "type": "number",
        "name": "views"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "storageStatisticsFast": {
    "fields": [
      {
        "type": "string",
        "name": "files_size",
        "desc": "Size of the database."
      },
      {
        "type": "number",
        "name": "file_count"
      },
      {
        "type": "string",
        "name": "database_size"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "updateNewMessage": {
    "fields": [
      {
        "type": "message",
        "name": "message",
        "desc": "True, if the message contains a mention of the current user."
      },
      {
        "type": "bool",
        "name": "disable_notification"
      },
      {
        "type": "bool",
        "name": "contains_mention"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewPreCheckoutQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Information about the order; may be null."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "currency"
      },
      {
        "type": "string",
        "name": "total_amount"
      },
      {
        "type": "string",
        "name": "invoice_payload"
      },
      {
        "type": "string",
        "name": "shipping_option_id"
      },
      {
        "type": "orderInfo",
        "name": "order_info"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewShippingQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "User shipping address."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "invoice_payload"
      },
      {
        "type": "shippingAddress",
        "name": "shipping_address"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNotificationSettings": {
    "fields": [
      {
        "type": "NotificationSettingsScope",
        "name": "scope",
        "desc": "The new notification settings."
      },
      {
        "type": "notificationSettings",
        "name": "notification_settings"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateOption": {
    "fields": [
      {
        "type": "string",
        "name": "name",
        "desc": "The new option value."
      },
      {
        "type": "OptionValue",
        "name": "value"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewInlineCallbackQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Query payload."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "string",
        "name": "inline_message_id"
      },
      {
        "type": "string",
        "name": "chat_instance"
      },
      {
        "type": "CallbackQueryPayload",
        "name": "payload"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateNewInlineQuery": {
    "fields": [
      {
        "type": "string",
        "name": "id",
        "desc": "Offset of the first entry to return."
      },
      {
        "type": "number",
        "name": "sender_user_id"
      },
      {
        "type": "location",
        "name": "user_location"
      },
      {
        "type": "string",
        "name": "query"
      },
      {
        "type": "string",
        "name": "offset"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateRecentStickers": {
    "fields": [
      {
        "type": "bool",
        "name": "is_attached",
        "desc": "The new list of file identifiers of recently used stickers."
      },
      {
        "type": "number[]",
        "name": "sticker_ids"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateSavedAnimations": {
    "fields": [
      {
        "type": "number[]",
        "name": "animation_ids",
        "desc": "The new list of file identifiers of saved animations."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateSecretChat": {
    "fields": [
      {
        "type": "secretChat",
        "name": "secret_chat",
        "desc": "New data about the secret chat."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateServiceNotification": {
    "fields": [
      {
        "type": "string",
        "name": "type",
        "desc": "Notification content."
      },
      {
        "type": "MessageContent",
        "name": "content"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateSupergroup": {
    "fields": [
      {
        "type": "supergroup",
        "name": "supergroup",
        "desc": "New data about the supergroup."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateSupergroupFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "supergroup_id",
        "desc": "New full information about the supergroup."
      },
      {
        "type": "supergroupFullInfo",
        "name": "supergroup_full_info"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateTrendingStickerSets": {
    "fields": [
      {
        "type": "stickerSets",
        "name": "sticker_sets",
        "desc": "The new list of trending sticker sets."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateUser": {
    "fields": [
      {
        "type": "user",
        "name": "user",
        "desc": "New data about the user."
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateUserChatAction": {
    "fields": [
      {
        "type": "string",
        "name": "chat_id",
        "desc": "The action description."
      },
      {
        "type": "number",
        "name": "user_id"
      },
      {
        "type": "ChatAction",
        "name": "action"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateUserFullInfo": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "New full information about the user."
      },
      {
        "type": "userFullInfo",
        "name": "user_full_info"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateUserPrivacySettingRules": {
    "fields": [
      {
        "type": "UserPrivacySetting",
        "name": "setting",
        "desc": "New privacy rules."
      },
      {
        "type": "userPrivacySettingRules",
        "name": "rules"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "updateUserStatus": {
    "fields": [
      {
        "type": "number",
        "name": "user_id",
        "desc": "New status of the user."
      },
      {
        "type": "UserStatus",
        "name": "status"
      }
    ],
    "extends": "Update",
    "type": "object"
  },
  "user": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "IETF language tag of the user's language; only available to bots."
      },
      {
        "type": "string",
        "name": "first_name"
      },
      {
        "type": "string",
        "name": "last_name"
      },
      {
        "type": "string",
        "name": "username"
      },
      {
        "type": "string",
        "name": "phone_number"
      },
      {
        "type": "UserStatus",
        "name": "status"
      },
      {
        "type": "profilePhoto",
        "name": "profile_photo"
      },
      {
        "type": "LinkState",
        "name": "outgoing_link"
      },
      {
        "type": "LinkState",
        "name": "incoming_link"
      },
      {
        "type": "bool",
        "name": "is_verified"
      },
      {
        "type": "string",
        "name": "restriction_reason"
      },
      {
        "type": "bool",
        "name": "have_access"
      },
      {
        "type": "UserType",
        "name": "type"
      },
      {
        "type": "string",
        "name": "language_code"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "userFullInfo": {
    "fields": [
      {
        "type": "bool",
        "name": "is_blocked",
        "desc": "If the user is a bot, information about the bot; may be null."
      },
      {
        "type": "bool",
        "name": "can_be_called"
      },
      {
        "type": "bool",
        "name": "has_private_calls"
      },
      {
        "type": "string",
        "name": "bio"
      },
      {
        "type": "string",
        "name": "share_text"
      },
      {
        "type": "number",
        "name": "group_in_common_count"
      },
      {
        "type": "botInfo",
        "name": "bot_info"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "UserPrivacySetting": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "userPrivacySettingAllowCalls": {
    "fields": [],
    "extends": "UserPrivacySetting",
    "type": "object"
  },
  "userPrivacySettingShowStatus": {
    "fields": [],
    "extends": "UserPrivacySetting",
    "type": "object"
  },
  "userPrivacySettingAllowChatInvites": {
    "fields": [],
    "extends": "UserPrivacySetting",
    "type": "object"
  },
  "userPrivacySettingRuleAllowContacts": {
    "fields": [],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "userPrivacySettingRuleAllowUsers": {
    "fields": [
      {
        "type": "number[]",
        "name": "user_ids",
        "desc": "The user identifiers."
      }
    ],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "userPrivacySettingRuleRestrictAll": {
    "fields": [],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "userPrivacySettingRuleRestrictContacts": {
    "fields": [],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "userPrivacySettingRuleRestrictUsers": {
    "fields": [
      {
        "type": "number[]",
        "name": "user_ids",
        "desc": "The user identifiers."
      }
    ],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "userPrivacySettingRules": {
    "fields": [
      {
        "type": "UserPrivacySettingRule[]",
        "name": "rules",
        "desc": "A list of rules."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "userProfilePhotos": {
    "fields": [
      {
        "type": "number",
        "name": "total_count",
        "desc": "A list of photos."
      },
      {
        "type": "photo[]",
        "name": "photos"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "users": {
    "fields": [
      {
        "type": "number",
        "name": "total_count",
        "desc": "A list of user identifiers."
      },
      {
        "type": "number[]",
        "name": "user_ids"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "UserStatus": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "userStatusEmpty": {
    "fields": [],
    "extends": "UserStatus",
    "type": "object"
  },
  "userStatusLastMonth": {
    "fields": [],
    "extends": "UserStatus",
    "type": "object"
  },
  "userStatusLastWeek": {
    "fields": [],
    "extends": "UserStatus",
    "type": "object"
  },
  "userStatusOffline": {
    "fields": [
      {
        "type": "number",
        "name": "was_online",
        "desc": "Point in time (Unix timestamp) when the user was last online."
      }
    ],
    "extends": "UserStatus",
    "type": "object"
  },
  "userStatusOnline": {
    "fields": [
      {
        "type": "number",
        "name": "expires",
        "desc": "Point in time (Unix timestamp) when the user's online status will expire."
      }
    ],
    "extends": "UserStatus",
    "type": "object"
  },
  "userStatusRecently": {
    "fields": [],
    "extends": "UserStatus",
    "type": "object"
  },
  "UserType": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "userTypeDeleted": {
    "fields": [],
    "extends": "UserType",
    "type": "object"
  },
  "userTypeBot": {
    "fields": [
      {
        "type": "bool",
        "name": "can_join_groups",
        "desc": "True, if the location of the user should be sent with every inline query to this bot."
      },
      {
        "type": "bool",
        "name": "can_read_all_group_messages"
      },
      {
        "type": "bool",
        "name": "is_inline"
      },
      {
        "type": "string",
        "name": "inline_query_placeholder"
      },
      {
        "type": "bool",
        "name": "need_location"
      }
    ],
    "extends": "UserType",
    "type": "object"
  },
  "userPrivacySettingRuleAllowAll": {
    "fields": [],
    "extends": "UserPrivacySettingRule",
    "type": "object"
  },
  "UserPrivacySettingRule": {
    "fields": [],
    "extends": "TDObject",
    "type": "object"
  },
  "userTypeUnknown": {
    "fields": [],
    "extends": "UserType",
    "type": "object"
  },
  "venue": {
    "fields": [
      {
        "type": "location",
        "name": "location",
        "desc": "Identifier of the venue in the provider database; as defined by the sender."
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "address"
      },
      {
        "type": "string",
        "name": "provider"
      },
      {
        "type": "string",
        "name": "id"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "video": {
    "fields": [
      {
        "type": "number",
        "name": "duration",
        "desc": "File containing the video."
      },
      {
        "type": "number",
        "name": "width"
      },
      {
        "type": "number",
        "name": "height"
      },
      {
        "type": "string",
        "name": "file_name"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "bool",
        "name": "has_stickers"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      },
      {
        "type": "file",
        "name": "video"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "videoNote": {
    "fields": [
      {
        "type": "number",
        "name": "duration",
        "desc": "File containing the video."
      },
      {
        "type": "number",
        "name": "length"
      },
      {
        "type": "photoSize",
        "name": "thumbnail"
      },
      {
        "type": "file",
        "name": "video"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "userTypeRegular": {
    "fields": [],
    "extends": "UserType",
    "type": "object"
  },
  "validatedOrderInfo": {
    "fields": [
      {
        "type": "string",
        "name": "order_info_id",
        "desc": "Available shipping options."
      },
      {
        "type": "shippingOption[]",
        "name": "shipping_options"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "wallpaper": {
    "fields": [
      {
        "type": "number",
        "name": "id",
        "desc": "Main color of the wallpaper in RGB24 format; should be treated as background color if no photos are specified."
      },
      {
        "type": "photoSize[]",
        "name": "sizes"
      },
      {
        "type": "number",
        "name": "color"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "webPageInstantView": {
    "fields": [
      {
        "type": "PageBlock[]",
        "name": "page_blocks",
        "desc": "True, if the instant view contains the full page. A network request might be needed to get the full web page instant view."
      },
      {
        "type": "bool",
        "name": "is_full"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "webPage": {
    "fields": [
      {
        "type": "string",
        "name": "url",
        "desc": "True, if the web page has an instant view."
      },
      {
        "type": "string",
        "name": "display_url"
      },
      {
        "type": "string",
        "name": "type"
      },
      {
        "type": "string",
        "name": "site_name"
      },
      {
        "type": "string",
        "name": "title"
      },
      {
        "type": "string",
        "name": "description"
      },
      {
        "type": "photo",
        "name": "photo"
      },
      {
        "type": "string",
        "name": "embed_url"
      },
      {
        "type": "string",
        "name": "embed_type"
      },
      {
        "type": "number",
        "name": "embed_width"
      },
      {
        "type": "number",
        "name": "embed_height"
      },
      {
        "type": "number",
        "name": "duration"
      },
      {
        "type": "string",
        "name": "author"
      },
      {
        "type": "animation",
        "name": "animation"
      },
      {
        "type": "audio",
        "name": "audio"
      },
      {
        "type": "document",
        "name": "document"
      },
      {
        "type": "sticker",
        "name": "sticker"
      },
      {
        "type": "video",
        "name": "video"
      },
      {
        "type": "videoNote",
        "name": "video_note"
      },
      {
        "type": "voiceNote",
        "name": "voice_note"
      },
      {
        "type": "bool",
        "name": "has_instant_view"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "wallpapers": {
    "fields": [
      {
        "type": "wallpaper[]",
        "name": "wallpapers",
        "desc": "A list of wallpapers."
      }
    ],
    "extends": "TDObject",
    "type": "object"
  },
  "voiceNote": {
    "fields": [
      {
        "type": "number",
        "name": "duration",
        "desc": "File containing the voice note."
      },
      {
        "type": "string",
        "name": "waveform"
      },
      {
        "type": "string",
        "name": "mime_type"
      },
      {
        "type": "file",
        "name": "voice"
      }
    ],
    "extends": "TDObject",
    "type": "object"
  }
}